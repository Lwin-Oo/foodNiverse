{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemorySparks = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const [sparks, setSparks] = useState([]);\n  const [replyMap, setReplyMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchSparks = async () => {\n      try {\n        const res = await API.get(\"/sparks\");\n        const fetched = Array.isArray(res.data) ? res.data : res.data.sparks || [];\n        setSparks(fetched);\n        const replyData = {};\n        for (const spark of fetched) {\n          const threadRes = await API.get(`/memories/replies/${spark.id}`);\n          replyData[spark.id] = threadRes.data.replies || [];\n        }\n        setReplyMap(replyData);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch sparks:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSparks();\n  }, []);\n  const handlePostSpark = async data => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      setSparks(prev => [res.data.spark, ...prev]);\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReplyMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n  const handleLove = async sparkId => {\n    try {\n      const res = await API.post(\"/sparks/love\", {\n        sparkId\n      });\n      const {\n        loved\n      } = res.data;\n      setSparks(prev => prev.map(s => {\n        var _s$lovedBy;\n        if (s.id !== sparkId) return s;\n        const alreadyLoved = (_s$lovedBy = s.lovedBy) === null || _s$lovedBy === void 0 ? void 0 : _s$lovedBy.includes(currentUser.uid);\n        let updatedLovedBy = [...(s.lovedBy || [])];\n        if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n        if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter(uid => uid !== currentUser.uid);\n        return {\n          ...s,\n          lovedBy: updatedLovedBy,\n          loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1\n        };\n      }));\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n  const handleShare = async sparkId => {\n    try {\n      await API.post(\"/sparks/share\", {\n        sparkId\n      });\n      setSparks(prev => prev.map(s => s.id === sparkId ? {\n        ...s,\n        shareCount: (s.shareCount || 0) + 1\n      } : s));\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n  const replyCounts = useMemo(() => {\n    const map = {};\n    for (const id in replyMap) {\n      map[id] = replyMap[id].length;\n    }\n    return map;\n  }, [replyMap]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          className: \"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\",\n          children: \"\\u2728 Leave a Spark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full max-w-md rounded-xl bg-white p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostSparkForm, {\n            onSubmit: handlePostSpark,\n            onClose: () => setShowModal(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Loading sparks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : sparks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No sparks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid sm:grid-cols-2 md:grid-cols-3 gap-4\",\n        children: sparks.map(spark => {\n          var _spark$lovedBy, _spark$location;\n          const loved = (_spark$lovedBy = spark.lovedBy) === null || _spark$lovedBy === void 0 ? void 0 : _spark$lovedBy.includes(currentUser.uid);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700 italic mb-2\",\n              children: [\"\\u201C\", spark.journal.slice(0, 120), spark.journal.length > 120 ? \"...\" : \"\", \"\\u201D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-semibold uppercase tracking-wide shadow-sm ring-1 ring-yellow-300\",\n                children: [\"\\uD83E\\uDDE0 \", spark.mood]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-pink-100 text-pink-800 px-3 py-1 rounded-full text-xs font-semibold uppercase tracking-wide shadow-sm ring-1 ring-pink-300\",\n                children: [\"\\uD83C\\uDFA8 \", spark.vibe]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2\",\n              children: [(spark === null || spark === void 0 ? void 0 : (_spark$location = spark.location) === null || _spark$location === void 0 ? void 0 : _spark$location.description) || \"Unknown\", \" \\u2022 \", spark.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mt-1 cursor-pointer\",\n              onClick: () => navigate(`/profile/${spark.name}`),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`,\n                alt: spark.name,\n                className: \"w-6 h-6 rounded-full border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-700 font-medium\",\n                children: spark.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-4 border-t border-gray-200 pt-2 text-xs font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `flex-1 py-2 transition flex items-center justify-center gap-1 ${loved ? \"text-red-600 font-bold\" : \"\"}`,\n                onClick: () => handleLove(spark.id),\n                children: [\"\\u2764\\uFE0F Love \", spark.loveCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.loveCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => handleShare(spark.id),\n                children: [\"\\uD83D\\uDD01 Share \", spark.shareCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.shareCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition font-semibold flex items-center justify-center gap-1\",\n                onClick: () => {\n                  setReplyingToSpark(spark);\n                  setActiveReply(spark.id);\n                },\n                children: [\"\\uD83E\\uDE9E Reflect \", replyCounts[spark.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-blue-500\",\n                  children: [\"(\", replyCounts[spark.id], \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, spark.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), activeReply && replyingToSpark && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full max-w-3xl max-h-[90vh] overflow-y-auto rounded-xl bg-white p-6 shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setActiveReply(null);\n            setReplyingToSpark(null);\n          },\n          className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 text-center mb-3\",\n          children: \"Reflect on this Spark \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MemoryForm, {\n          onAddMemory: mem => handleReplySubmit(mem, replyingToSpark.id),\n          replyingTo: replyingToSpark.id,\n          isInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MemorySparks, \"79a6Z2AnMWSsl+XjDaxE/ZtfwYg=\", false, function () {\n  return [useNavigate];\n});\n_c = MemorySparks;\nexport default MemorySparks;\nvar _c;\n$RefreshReg$(_c, \"MemorySparks\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","API","GlobalHeader","MemoryForm","PostSparkForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MemorySparks","_s","currentUser","JSON","parse","localStorage","getItem","navigate","sparks","setSparks","replyMap","setReplyMap","loading","setLoading","activeReply","setActiveReply","replyingToSpark","setReplyingToSpark","showModal","setShowModal","fetchSparks","res","get","fetched","Array","isArray","data","replyData","spark","threadRes","id","replies","err","console","error","handlePostSpark","post","prev","handleReplySubmit","newReply","sparkId","handleLove","loved","map","s","_s$lovedBy","alreadyLoved","lovedBy","includes","uid","updatedLovedBy","push","filter","loveCount","handleShare","shareCount","replyCounts","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","onClose","_spark$lovedBy","_spark$location","journal","slice","mood","vibe","location","description","time","name","src","alt","onAddMemory","mem","replyingTo","isInline","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\n\nconst MemorySparks = () => {\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  const [sparks, setSparks] = useState([]);\n  const [replyMap, setReplyMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchSparks = async () => {\n      try {\n        const res = await API.get(\"/sparks\");\n        const fetched = Array.isArray(res.data) ? res.data : res.data.sparks || [];\n        setSparks(fetched);\n\n        const replyData = {};\n        for (const spark of fetched) {\n          const threadRes = await API.get(`/memories/replies/${spark.id}`);\n          replyData[spark.id] = threadRes.data.replies || [];\n        }\n        setReplyMap(replyData);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch sparks:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSparks();\n  }, []);\n\n  const handlePostSpark = async (data) => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      setSparks((prev) => [res.data.spark, ...prev]);\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReplyMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n\n  const handleLove = async (sparkId) => {\n    try {\n      const res = await API.post(\"/sparks/love\", { sparkId });\n      const { loved } = res.data;\n\n      setSparks((prev) =>\n        prev.map((s) => {\n          if (s.id !== sparkId) return s;\n          const alreadyLoved = s.lovedBy?.includes(currentUser.uid);\n          let updatedLovedBy = [...(s.lovedBy || [])];\n          if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n          if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter((uid) => uid !== currentUser.uid);\n\n          return {\n            ...s,\n            lovedBy: updatedLovedBy,\n            loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1,\n          };\n        })\n      );\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n\n  const handleShare = async (sparkId) => {\n    try {\n      await API.post(\"/sparks/share\", { sparkId });\n      setSparks((prev) =>\n        prev.map((s) =>\n          s.id === sparkId ? { ...s, shareCount: (s.shareCount || 0) + 1 } : s\n        )\n      );\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n\n  const replyCounts = useMemo(() => {\n    const map = {};\n    for (const id in replyMap) {\n      map[id] = replyMap[id].length;\n    }\n    return map;\n  }, [replyMap]);\n\n  return (\n    <>\n      <GlobalHeader />\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <div className=\"flex justify-end mb-4\">\n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\"\n          >\n            ✨ Leave a Spark\n          </button>\n        </div>\n\n        {showModal && (\n          <div className=\"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\">\n            <div className=\"relative w-full max-w-md rounded-xl bg-white p-6\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n              >\n                &times;\n              </button>\n              <PostSparkForm onSubmit={handlePostSpark} onClose={() => setShowModal(false)} />\n            </div>\n          </div>\n        )}\n\n        {loading ? (\n          <p className=\"text-center text-gray-500\">Loading sparks...</p>\n        ) : sparks.length === 0 ? (\n          <p className=\"text-center text-gray-500\">No sparks yet</p>\n        ) : (\n          <div className=\"grid sm:grid-cols-2 md:grid-cols-3 gap-4\">\n            {sparks.map((spark) => {\n              const loved = spark.lovedBy?.includes(currentUser.uid);\n              return (\n                <div\n                  key={spark.id}\n                  className=\"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\"\n                >\n                  <p className=\"text-sm text-gray-700 italic mb-2\">\n                    “{spark.journal.slice(0, 120)}{spark.journal.length > 120 ? \"...\" : \"\"}”\n                  </p>\n\n                  <div className=\"flex flex-wrap gap-2 mb-2\">\n                    <span className=\"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-semibold uppercase tracking-wide shadow-sm ring-1 ring-yellow-300\">\n                      🧠 {spark.mood}\n                    </span>\n                    <span className=\"bg-pink-100 text-pink-800 px-3 py-1 rounded-full text-xs font-semibold uppercase tracking-wide shadow-sm ring-1 ring-pink-300\">\n                      🎨 {spark.vibe}\n                    </span>\n                  </div>\n\n                  <p className=\"text-xs text-gray-500 mb-2\">\n                    {spark?.location?.description || \"Unknown\"} • {spark.time}\n                  </p>\n\n                  <div\n                    className=\"flex items-center gap-2 mt-1 cursor-pointer\"\n                    onClick={() => navigate(`/profile/${spark.name}`)}\n                  >\n                    <img\n                      src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`}\n                      alt={spark.name}\n                      className=\"w-6 h-6 rounded-full border\"\n                    />\n                    <span className=\"text-xs text-gray-700 font-medium\">{spark.name}</span>\n                  </div>\n\n                  {/* Buttons */}\n                  <div className=\"flex justify-between mt-4 border-t border-gray-200 pt-2 text-xs font-medium\">\n                    <button\n                      className={`flex-1 py-2 transition flex items-center justify-center gap-1 ${\n                        loved ? \"text-red-600 font-bold\" : \"\"\n                      }`}\n                      onClick={() => handleLove(spark.id)}\n                    >\n                      ❤️ Love {spark.loveCount > 0 && <span className=\"text-gray-500\">({spark.loveCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => handleShare(spark.id)}\n                    >\n                      🔁 Share {spark.shareCount > 0 && <span className=\"text-gray-500\">({spark.shareCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition font-semibold flex items-center justify-center gap-1\"\n                      onClick={() => {\n                        setReplyingToSpark(spark);\n                        setActiveReply(spark.id);\n                      }}\n                    >\n                      🪞 Reflect {replyCounts[spark.id] > 0 && <span className=\"text-blue-500\">({replyCounts[spark.id]})</span>}\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {/* Memory Form Modal */}\n      {activeReply && replyingToSpark && (\n        <div className=\"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\">\n            <div className=\"relative w-full max-w-3xl max-h-[90vh] overflow-y-auto rounded-xl bg-white p-6 shadow-xl\">\n                <button\n                    onClick={() => {\n                        setActiveReply(null);\n                        setReplyingToSpark(null);\n                    }}\n                    className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n                >\n                    &times;\n                </button>\n                <h2 className=\"text-lg font-semibold text-gray-800 text-center mb-3\">\n                    Reflect on this Spark ✨\n                </h2>\n                <MemoryForm\n                    onAddMemory={(mem) => handleReplySubmit(mem, replyingToSpark.id)}\n                    replyingTo={replyingToSpark.id}\n                    isInline\n                />\n            </div>\n        </div>\n    )}\n    \n    </>\n  );\n};\n\nexport default MemorySparks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}