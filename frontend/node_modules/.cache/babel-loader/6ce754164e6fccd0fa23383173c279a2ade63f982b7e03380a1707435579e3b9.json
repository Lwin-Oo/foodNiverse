{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/HomeFeed/HomeFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\nimport API from \"../../utils/api\";\nimport MemoryCard from \"../../components/MemoryCard/MemoryCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeFeed = () => {\n  _s();\n  const [memories, setMemories] = useState([]);\n  const groupRefs = useRef({});\n  useEffect(() => {\n    const fetchMemories = async () => {\n      try {\n        const res = await API.get(\"/memories\");\n        const formatted = res.data.memories.map(m => {\n          const createdAt = new Date(m.createdAt._seconds * 1000);\n          return {\n            ...m,\n            dateFormatted: createdAt.toLocaleDateString(\"en-US\", {\n              month: \"short\",\n              day: \"numeric\",\n              year: \"numeric\"\n            }),\n            timeFormatted: createdAt.toLocaleTimeString(\"en-US\", {\n              hour: \"numeric\",\n              minute: \"2-digit\",\n              hour12: true\n            })\n          };\n        });\n        setMemories(formatted.reverse()); // Newest to oldest\n      } catch (err) {\n        console.error(\"❌ Failed to load memories:\", err);\n      }\n    };\n    fetchMemories();\n  }, []);\n  const groupedMemories = memories.reduce((acc, mem) => {\n    if (!acc[mem.dateFormatted]) acc[mem.dateFormatted] = [];\n    acc[mem.dateFormatted].push(mem);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-24 max-w-7xl mx-auto px-4 pt-10\",\n    children: Object.entries(groupedMemories).map(([date, group], i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full\",\n      ref: el => groupRefs.current[date] = el,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center relative w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/2 left-[7.5rem] right-0 h-[2px] bg-blue-300 opacity-70 z-0 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shrink-0 w-[7.5rem] flex justify-end pr-2 z-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-100 text-blue-700 text-xs font-medium px-3 py-1 rounded-full shadow-md\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-12 pl-2 z-10\",\n          children: group.map((memory, j) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative flex flex-col items-center w-fit\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2 text-[11px] text-gray-500 font-medium whitespace-nowrap\",\n                children: memory.timeFormatted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MemoryCard, {\n              memory: memory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeFeed, \"z5/H/n6Dk4gOlQCuNiAAojRvJ2Y=\");\n_c = HomeFeed;\nexport default HomeFeed;\nvar _c;\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLayoutEffect","API","MemoryCard","jsxDEV","_jsxDEV","HomeFeed","_s","memories","setMemories","groupRefs","fetchMemories","res","get","formatted","data","map","m","createdAt","Date","_seconds","dateFormatted","toLocaleDateString","month","day","year","timeFormatted","toLocaleTimeString","hour","minute","hour12","reverse","err","console","error","groupedMemories","reduce","acc","mem","push","className","children","Object","entries","date","group","i","ref","el","current","fileName","_jsxFileName","lineNumber","columnNumber","memory","j","Fragment","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/HomeFeed/HomeFeed.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\nimport API from \"../../utils/api\";\nimport MemoryCard from \"../../components/MemoryCard/MemoryCard\";\n\nconst HomeFeed = () => {\n  const [memories, setMemories] = useState([]);\n  const groupRefs = useRef({});\n\n  useEffect(() => {\n    const fetchMemories = async () => {\n      try {\n        const res = await API.get(\"/memories\");\n        const formatted = res.data.memories.map((m) => {\n          const createdAt = new Date(m.createdAt._seconds * 1000);\n          return {\n            ...m,\n            dateFormatted: createdAt.toLocaleDateString(\"en-US\", {\n              month: \"short\",\n              day: \"numeric\",\n              year: \"numeric\",\n            }),\n            timeFormatted: createdAt.toLocaleTimeString(\"en-US\", {\n              hour: \"numeric\",\n              minute: \"2-digit\",\n              hour12: true,\n            }),\n          };\n        });\n        setMemories(formatted.reverse()); // Newest to oldest\n      } catch (err) {\n        console.error(\"❌ Failed to load memories:\", err);\n      }\n    };\n\n    fetchMemories();\n  }, []);\n\n  const groupedMemories = memories.reduce((acc, mem) => {\n    if (!acc[mem.dateFormatted]) acc[mem.dateFormatted] = [];\n    acc[mem.dateFormatted].push(mem);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"flex flex-col gap-24 max-w-7xl mx-auto px-4 pt-10\">\n      {Object.entries(groupedMemories).map(([date, group], i) => (\n        <div\n          key={i}\n          className=\"relative w-full\"\n          ref={(el) => (groupRefs.current[date] = el)}\n        >\n          <div className=\"flex items-center relative w-full\">\n            {/* THREAD LINE (one single line from date to last card) */}\n            <div className=\"absolute top-1/2 left-[7.5rem] right-0 h-[2px] bg-blue-300 opacity-70 z-0 rounded-full\" />\n\n            {/* Date Tag */}\n            <div className=\"shrink-0 w-[7.5rem] flex justify-end pr-2 z-10\">\n              <div className=\"bg-blue-100 text-blue-700 text-xs font-medium px-3 py-1 rounded-full shadow-md\">\n                {date}\n              </div>\n            </div>\n\n            {/* Timeline Sequence */}\n            <div className=\"flex items-center gap-12 pl-2 z-10\">\n              {group.map((memory, j) => (\n                <React.Fragment key={j}>\n                  {/* Time Label ABOVE thread */}\n                  <div className=\"relative flex flex-col items-center w-fit\">\n                    <div className=\"mb-2 text-[11px] text-gray-500 font-medium whitespace-nowrap\">\n                      {memory.timeFormatted}\n                    </div>\n                  </div>\n\n                  {/* Card */}\n                  <MemoryCard memory={memory} />\n                </React.Fragment>\n              ))}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default HomeFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}