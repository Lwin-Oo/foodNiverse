{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MOOD_OPTIONS = [\"open\", \"nostalgic\", \"excited\", \"cozy\", \"peaceful\"];\nconst VIBE_OPTIONS = [\"friendly\", \"spicy\", \"warm\", \"simple\", \"comforting\"];\nconst OCCASION_OPTIONS = [\"hangout\", \"date\", \"family dinner\", \"birthday\", \"exploration\"];\nconst MemorySparks = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const [sparks, setSparks] = useState([]);\n  const [replyMap, setReplyMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [showOptions, setShowOptions] = useState(false);\n  const [newSpark, setNewSpark] = useState({\n    journal: \"\",\n    mood: \"\",\n    vibe: \"\",\n    occasion: \"\"\n  });\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const {\n    ready,\n    value,\n    setValue,\n    suggestions: {\n      status,\n      data\n    },\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    debounce: 300\n  });\n  useEffect(() => {\n    const fetchSparks = async () => {\n      try {\n        const res = await API.get(\"/sparks\");\n        const fetched = Array.isArray(res.data) ? res.data : res.data.sparks || [];\n        setSparks(fetched);\n        const replyData = {};\n        for (const spark of fetched) {\n          const threadRes = await API.get(`/memories/replies/${spark.id}`);\n          replyData[spark.id] = threadRes.data.replies || [];\n        }\n        setReplyMap(replyData);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch sparks:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSparks();\n  }, []);\n  const handlePostSpark = async () => {\n    const {\n      journal,\n      mood,\n      vibe,\n      occasion\n    } = newSpark;\n    if (!journal || !mood || !vibe || !occasion || !selectedPlace) return;\n    try {\n      const res = await API.post(\"/sparks\", {\n        ...newSpark,\n        location: {\n          description: selectedPlace.description,\n          lat: selectedPlace.lat,\n          lng: selectedPlace.lng\n        },\n        time: \"anytime\",\n        image: \"\"\n      });\n      setSparks(prev => [res.data.spark, ...prev]);\n      setNewSpark({\n        journal: \"\",\n        mood: \"\",\n        vibe: \"\",\n        occasion: \"\"\n      });\n      setValue(\"\");\n      setSelectedPlace(null);\n      setShowOptions(false);\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReplyMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setActiveReply(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800 mb-4 text-center\",\n        children: \"\\u2728 Memory Sparks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/90 border border-blue-100 rounded-xl shadow p-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\u2728 Leave a spark... (e.g. craving sushi with a cozy vibe)\",\n          value: newSpark.journal,\n          onFocus: () => setShowOptions(true),\n          onChange: e => setNewSpark({\n            ...newSpark,\n            journal: e.target.value\n          }),\n          rows: 1,\n          className: \"w-full border border-gray-300 rounded-md p-2 text-sm resize-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 grid grid-cols-1 md:grid-cols-4 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: newSpark.mood,\n            onChange: e => setNewSpark({\n              ...newSpark,\n              mood: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), MOOD_OPTIONS.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: m,\n              children: m\n            }, m, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newSpark.vibe,\n            onChange: e => setNewSpark({\n              ...newSpark,\n              vibe: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Vibe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), VIBE_OPTIONS.map(v => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: v,\n              children: v\n            }, v, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newSpark.occasion,\n            onChange: e => setNewSpark({\n              ...newSpark,\n              occasion: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Occasion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), OCCASION_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: o,\n              children: o\n            }, o, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search place\",\n              value: value,\n              onChange: e => {\n                setValue(e.target.value);\n                setSelectedPlace(null);\n              },\n              disabled: !ready,\n              className: \"p-2 border border-gray-300 rounded text-sm w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), status === \"OK\" && data.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"absolute z-10 bg-white border border-gray-200 rounded shadow max-h-40 overflow-y-auto mt-1 text-sm\",\n              children: data.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: async () => {\n                  const description = suggestion.description;\n                  setValue(description, false);\n                  clearSuggestions();\n                  try {\n                    const results = await getGeocode({\n                      address: description\n                    });\n                    const {\n                      lat,\n                      lng\n                    } = await getLatLng(results[0]);\n                    setSelectedPlace({\n                      description,\n                      lat,\n                      lng\n                    });\n                  } catch (err) {\n                    console.error(\"❌ Location select error:\", err);\n                  }\n                },\n                className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n                children: suggestion.description\n              }, suggestion.place_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 text-right\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePostSpark,\n            className: \"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 text-sm\",\n            children: \"\\uD83D\\uDE80 Post Spark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Loading sparks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this) : sparks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No sparks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid sm:grid-cols-2 md:grid-cols-3 gap-4\",\n        children: sparks.map(spark => {\n          var _spark$location;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700 italic mb-2\",\n              children: [\"\\u201C\", spark.journal.slice(0, 120), spark.journal.length > 120 ? \"...\" : \"\", \"\\u201D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-700 font-medium mb-1\",\n              children: [\"Mood: \", spark.mood, \" \\u2022 Vibe: \", spark.vibe]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2\",\n              children: [(spark === null || spark === void 0 ? void 0 : (_spark$location = spark.location) === null || _spark$location === void 0 ? void 0 : _spark$location.description) || \"Unknown\", \" \\u2022 \", spark.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mt-1 cursor-pointer\",\n              onClick: () => navigate(`/profile/${spark.name}`),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`,\n                alt: spark.name,\n                className: \"w-6 h-6 rounded-full border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-700 font-medium\",\n                children: spark.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mt-4 w-full bg-green-500 text-white py-2 rounded-full text-sm hover:bg-green-600\",\n              onClick: () => setActiveReply(spark.id),\n              children: \"Respond\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), activeReply === spark.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: /*#__PURE__*/_jsxDEV(MemoryForm, {\n                onAddMemory: mem => handleReplySubmit(mem, spark.id),\n                replyingTo: spark.id,\n                isInline: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, spark.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MemorySparks, \"BQirWkYmNEaMahfvBzwQ5VVKgRU=\", false, function () {\n  return [useNavigate, usePlacesAutocomplete];\n});\n_c = MemorySparks;\nexport default MemorySparks;\nvar _c;\n$RefreshReg$(_c, \"MemorySparks\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","usePlacesAutocomplete","getGeocode","getLatLng","API","GlobalHeader","MemoryForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MOOD_OPTIONS","VIBE_OPTIONS","OCCASION_OPTIONS","MemorySparks","_s","currentUser","JSON","parse","localStorage","getItem","navigate","sparks","setSparks","replyMap","setReplyMap","loading","setLoading","activeReply","setActiveReply","showOptions","setShowOptions","newSpark","setNewSpark","journal","mood","vibe","occasion","selectedPlace","setSelectedPlace","ready","value","setValue","suggestions","status","data","clearSuggestions","debounce","fetchSparks","res","get","fetched","Array","isArray","replyData","spark","threadRes","id","replies","err","console","error","handlePostSpark","post","location","description","lat","lng","time","image","prev","handleReplySubmit","newReply","sparkId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","onFocus","onChange","e","target","rows","map","m","v","o","type","disabled","length","suggestion","onClick","results","address","place_id","_spark$location","slice","name","src","alt","onAddMemory","mem","replyingTo","isInline","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\n\nconst MOOD_OPTIONS = [\"open\", \"nostalgic\", \"excited\", \"cozy\", \"peaceful\"];\nconst VIBE_OPTIONS = [\"friendly\", \"spicy\", \"warm\", \"simple\", \"comforting\"];\nconst OCCASION_OPTIONS = [\"hangout\", \"date\", \"family dinner\", \"birthday\", \"exploration\"];\n\nconst MemorySparks = () => {\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  const [sparks, setSparks] = useState([]);\n  const [replyMap, setReplyMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [showOptions, setShowOptions] = useState(false);\n\n  const [newSpark, setNewSpark] = useState({\n    journal: \"\",\n    mood: \"\",\n    vibe: \"\",\n    occasion: \"\",\n  });\n\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const {\n    ready,\n    value,\n    setValue,\n    suggestions: { status, data },\n    clearSuggestions,\n  } = usePlacesAutocomplete({ debounce: 300 });\n\n  useEffect(() => {\n    const fetchSparks = async () => {\n      try {\n        const res = await API.get(\"/sparks\");\n        const fetched = Array.isArray(res.data) ? res.data : res.data.sparks || [];\n        setSparks(fetched);\n\n        const replyData = {};\n        for (const spark of fetched) {\n          const threadRes = await API.get(`/memories/replies/${spark.id}`);\n          replyData[spark.id] = threadRes.data.replies || [];\n        }\n        setReplyMap(replyData);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch sparks:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSparks();\n  }, []);\n\n  const handlePostSpark = async () => {\n    const { journal, mood, vibe, occasion } = newSpark;\n    if (!journal || !mood || !vibe || !occasion || !selectedPlace) return;\n\n    try {\n      const res = await API.post(\"/sparks\", {\n        ...newSpark,\n        location: {\n          description: selectedPlace.description,\n          lat: selectedPlace.lat,\n          lng: selectedPlace.lng,\n        },\n        time: \"anytime\",\n        image: \"\",\n      });\n\n      setSparks((prev) => [res.data.spark, ...prev]);\n      setNewSpark({ journal: \"\", mood: \"\", vibe: \"\", occasion: \"\" });\n      setValue(\"\");\n      setSelectedPlace(null);\n      setShowOptions(false);\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReplyMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setActiveReply(null);\n  };\n\n  return (\n    <>\n      <GlobalHeader />\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">✨ Memory Sparks</h1>\n\n        {/* 🔥 Spark Composer */}\n        <div className=\"bg-white/90 border border-blue-100 rounded-xl shadow p-4 mb-6\">\n          <textarea\n            placeholder=\"✨ Leave a spark... (e.g. craving sushi with a cozy vibe)\"\n            value={newSpark.journal}\n            onFocus={() => setShowOptions(true)}\n            onChange={(e) => setNewSpark({ ...newSpark, journal: e.target.value })}\n            rows={1}\n            className=\"w-full border border-gray-300 rounded-md p-2 text-sm resize-none\"\n          />\n\n          {showOptions && (\n            <div className=\"mt-3 grid grid-cols-1 md:grid-cols-4 gap-2\">\n              <select\n                value={newSpark.mood}\n                onChange={(e) => setNewSpark({ ...newSpark, mood: e.target.value })}\n                className=\"p-2 border border-gray-300 rounded text-sm\"\n              >\n                <option value=\"\">Mood</option>\n                {MOOD_OPTIONS.map((m) => (\n                  <option key={m} value={m}>{m}</option>\n                ))}\n              </select>\n\n              <select\n                value={newSpark.vibe}\n                onChange={(e) => setNewSpark({ ...newSpark, vibe: e.target.value })}\n                className=\"p-2 border border-gray-300 rounded text-sm\"\n              >\n                <option value=\"\">Vibe</option>\n                {VIBE_OPTIONS.map((v) => (\n                  <option key={v} value={v}>{v}</option>\n                ))}\n              </select>\n\n              <select\n                value={newSpark.occasion}\n                onChange={(e) => setNewSpark({ ...newSpark, occasion: e.target.value })}\n                className=\"p-2 border border-gray-300 rounded text-sm\"\n              >\n                <option value=\"\">Occasion</option>\n                {OCCASION_OPTIONS.map((o) => (\n                  <option key={o} value={o}>{o}</option>\n                ))}\n              </select>\n\n              {/* Google Places Autocomplete */}\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search place\"\n                  value={value}\n                  onChange={(e) => {\n                    setValue(e.target.value);\n                    setSelectedPlace(null);\n                  }}\n                  disabled={!ready}\n                  className=\"p-2 border border-gray-300 rounded text-sm w-full\"\n                />\n                {status === \"OK\" && data.length > 0 && (\n                  <ul className=\"absolute z-10 bg-white border border-gray-200 rounded shadow max-h-40 overflow-y-auto mt-1 text-sm\">\n                    {data.map((suggestion) => (\n                      <li\n                        key={suggestion.place_id}\n                        onClick={async () => {\n                          const description = suggestion.description;\n                          setValue(description, false);\n                          clearSuggestions();\n                          try {\n                            const results = await getGeocode({ address: description });\n                            const { lat, lng } = await getLatLng(results[0]);\n                            setSelectedPlace({ description, lat, lng });\n                          } catch (err) {\n                            console.error(\"❌ Location select error:\", err);\n                          }\n                        }}\n                        className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                      >\n                        {suggestion.description}\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Post Button */}\n          <div className=\"mt-3 text-right\">\n            <button\n              onClick={handlePostSpark}\n              className=\"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 text-sm\"\n            >\n              🚀 Post Spark\n            </button>\n          </div>\n        </div>\n\n        {/* ✨ Spark Feed */}\n        {loading ? (\n          <p className=\"text-center text-gray-500\">Loading sparks...</p>\n        ) : sparks.length === 0 ? (\n          <p className=\"text-center text-gray-500\">No sparks yet</p>\n        ) : (\n          <div className=\"grid sm:grid-cols-2 md:grid-cols-3 gap-4\">\n            {sparks.map((spark) => (\n              <div\n                key={spark.id}\n                className=\"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\"\n              >\n                <p className=\"text-sm text-gray-700 italic mb-2\">\n                  “{spark.journal.slice(0, 120)}{spark.journal.length > 120 ? \"...\" : \"\"}”\n                </p>\n\n                <div className=\"text-xs text-blue-700 font-medium mb-1\">\n                  Mood: {spark.mood} • Vibe: {spark.vibe}\n                </div>\n                <p className=\"text-xs text-gray-500 mb-2\">\n                  {spark?.location?.description || \"Unknown\"} • {spark.time}\n                </p>\n\n                <div\n                  className=\"flex items-center gap-2 mt-1 cursor-pointer\"\n                  onClick={() => navigate(`/profile/${spark.name}`)}\n                >\n                  <img\n                    src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`}\n                    alt={spark.name}\n                    className=\"w-6 h-6 rounded-full border\"\n                  />\n                  <span className=\"text-xs text-gray-700 font-medium\">{spark.name}</span>\n                </div>\n\n                <button\n                  className=\"mt-4 w-full bg-green-500 text-white py-2 rounded-full text-sm hover:bg-green-600\"\n                  onClick={() => setActiveReply(spark.id)}\n                >\n                  Respond\n                </button>\n\n                {activeReply === spark.id && (\n                  <div className=\"mt-4\">\n                    <MemoryForm\n                      onAddMemory={(mem) => handleReplySubmit(mem, spark.id)}\n                      replyingTo={spark.id}\n                      isInline\n                    />\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MemorySparks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}