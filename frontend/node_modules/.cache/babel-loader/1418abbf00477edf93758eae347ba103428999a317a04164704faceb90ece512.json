{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/HomeFeed/HomeFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/api\";\nimport MemoryCard from \"../../components/MemoryCard/MemoryCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeFeed = () => {\n  _s();\n  const [memories, setMemories] = useState([]);\n  useEffect(() => {\n    const fetchMemories = async () => {\n      try {\n        const res = await API.get(\"/memories\");\n        const formatted = res.data.memories.map(m => ({\n          ...m,\n          dateFormatted: new Date(m.createdAt._seconds * 1000).toLocaleDateString(\"en-US\", {\n            month: \"short\",\n            day: \"numeric\",\n            year: \"numeric\"\n          })\n        }));\n        setMemories(formatted);\n      } catch (err) {\n        console.error(\"❌ Failed to load memories:\", err);\n      }\n    };\n    fetchMemories();\n  }, []);\n\n  // Group memories by date\n  const groupedMemories = memories.reduce((acc, mem) => {\n    if (!acc[mem.dateFormatted]) acc[mem.dateFormatted] = [];\n    acc[mem.dateFormatted].push(mem);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-24 max-w-6xl mx-auto px-4 pt-10 relative\",\n    children: Object.entries(groupedMemories).map(([date, group], i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center relative w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-16 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-[2px] w-10 bg-blue-300 opacity-70 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-full mr-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-100 text-blue-700 text-xs font-medium px-3 py-1 rounded-full shadow-md\",\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), group.map((memory, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(MemoryCard, {\n              memory: memory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), j !== group.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute top-1/2 left-full ml-4 h-[2px] w-16 bg-blue-300 opacity-70 transform -translate-y-1/2 z-0 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeFeed, \"4Aw2YNNMbJ74L/XXLmVNoiPIvX0=\");\n_c = HomeFeed;\nexport default HomeFeed;\nvar _c;\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useEffect","useState","API","MemoryCard","jsxDEV","_jsxDEV","HomeFeed","_s","memories","setMemories","fetchMemories","res","get","formatted","data","map","m","dateFormatted","Date","createdAt","_seconds","toLocaleDateString","month","day","year","err","console","error","groupedMemories","reduce","acc","mem","push","className","children","Object","entries","date","group","i","fileName","_jsxFileName","lineNumber","columnNumber","memory","j","length","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/HomeFeed/HomeFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/api\";\nimport MemoryCard from \"../../components/MemoryCard/MemoryCard\";\n\nconst HomeFeed = () => {\n  const [memories, setMemories] = useState([]);\n\n  useEffect(() => {\n    const fetchMemories = async () => {\n      try {\n        const res = await API.get(\"/memories\");\n        const formatted = res.data.memories.map((m) => ({\n          ...m,\n          dateFormatted: new Date(m.createdAt._seconds * 1000).toLocaleDateString(\"en-US\", {\n            month: \"short\",\n            day: \"numeric\",\n            year: \"numeric\",\n          }),\n        }));\n        setMemories(formatted);\n      } catch (err) {\n        console.error(\"❌ Failed to load memories:\", err);\n      }\n    };\n\n    fetchMemories();\n  }, []);\n\n  // Group memories by date\n  const groupedMemories = memories.reduce((acc, mem) => {\n    if (!acc[mem.dateFormatted]) acc[mem.dateFormatted] = [];\n    acc[mem.dateFormatted].push(mem);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"flex flex-col gap-24 max-w-6xl mx-auto px-4 pt-10 relative\">\n      {Object.entries(groupedMemories).map(([date, group], i) => (\n        <div key={i} className=\"relative w-full\">\n          <div className=\"flex justify-center relative w-full\">\n            {/* Memory Capsules Row */}\n            <div className=\"flex gap-16 items-center\">\n              {/* Thread + Date Tag (before first card only) */}\n              <div className=\"relative flex items-center\">\n                {/* Horizontal thread */}\n                <div className=\"h-[2px] w-10 bg-blue-300 opacity-70 rounded-full\" />\n                \n                {/* Date tag */}\n                <div className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-full mr-4\">\n                  <div className=\"bg-blue-100 text-blue-700 text-xs font-medium px-3 py-1 rounded-full shadow-md\">\n                    {date}\n                  </div>\n                </div>\n              </div>\n\n              {/* Memory Cards */}\n              {group.map((memory, j) => (\n                <div key={j} className=\"relative\">\n                  <MemoryCard memory={memory} />\n\n                  {/* Connect to next card */}\n                  {j !== group.length - 1 && (\n                    <div className=\"absolute top-1/2 left-full ml-4 h-[2px] w-16 bg-blue-300 opacity-70 transform -translate-y-1/2 z-0 rounded-full\" />\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default HomeFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}