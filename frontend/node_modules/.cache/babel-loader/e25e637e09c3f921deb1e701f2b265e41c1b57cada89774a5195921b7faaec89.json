{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/HomeFeed/HomeFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/api\";\nimport MemoryCard from \"../../components/MemoryCard/MemoryCard\";\nimport DateStream from \"../../components/DateStream/DateStream\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeFeed = () => {\n  _s();\n  const [memories, setMemories] = useState([]);\n  useEffect(() => {\n    const fetchMemories = async () => {\n      try {\n        const res = await API.get(\"/memories\");\n        const memoriesWithDates = res.data.memories.map(memory => ({\n          ...memory,\n          dateFormatted: new Date(memory.createdAt._seconds * 1000).toLocaleDateString(\"en-US\", {\n            month: \"short\",\n            day: \"numeric\",\n            year: \"numeric\"\n          })\n        }));\n        setMemories(memoriesWithDates);\n      } catch (err) {\n        console.error(\"❌ Failed to load memories:\", err);\n      }\n    };\n    fetchMemories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex max-w-5xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(DateStream, {\n      memories: memories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-12 w-full\",\n      children: memories.map((memory, index) => /*#__PURE__*/_jsxDEV(MemoryCard, {\n        memory: memory\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeFeed, \"4Aw2YNNMbJ74L/XXLmVNoiPIvX0=\");\n_c = HomeFeed;\nexport default HomeFeed;\nvar _c;\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useEffect","useState","API","MemoryCard","DateStream","jsxDEV","_jsxDEV","HomeFeed","_s","memories","setMemories","fetchMemories","res","get","memoriesWithDates","data","map","memory","dateFormatted","Date","createdAt","_seconds","toLocaleDateString","month","day","year","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/HomeFeed/HomeFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/api\";\nimport MemoryCard from \"../../components/MemoryCard/MemoryCard\";\nimport DateStream from \"../../components/DateStream/DateStream\";\n\nconst HomeFeed = () => {\n  const [memories, setMemories] = useState([]);\n\n  useEffect(() => {\n    const fetchMemories = async () => {\n      try {\n        const res = await API.get(\"/memories\");\n        const memoriesWithDates = res.data.memories.map((memory) => ({\n          ...memory,\n          dateFormatted: new Date(memory.createdAt._seconds * 1000).toLocaleDateString(\"en-US\", {\n            month: \"short\",\n            day: \"numeric\",\n            year: \"numeric\",\n          }),\n        }));\n        setMemories(memoriesWithDates);\n      } catch (err) {\n        console.error(\"❌ Failed to load memories:\", err);\n      }\n    };\n  \n    fetchMemories();\n  }, []);\n  \n\n  return (\n    <div className=\"flex max-w-5xl mx-auto\">\n      {/* Left: DateStream */}\n      <DateStream memories={memories} />\n\n      {/* Right: Memory Capsules */}\n      <div className=\"flex flex-col gap-12 w-full\">\n        {memories.map((memory, index) => (\n          <MemoryCard key={index} memory={memory} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HomeFeed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,UAAU,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,WAAW,CAAC;QACtC,MAAMC,iBAAiB,GAAGF,GAAG,CAACG,IAAI,CAACN,QAAQ,CAACO,GAAG,CAAEC,MAAM,KAAM;UAC3D,GAAGA,MAAM;UACTC,aAAa,EAAE,IAAIC,IAAI,CAACF,MAAM,CAACG,SAAS,CAACC,QAAQ,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;YACpFC,KAAK,EAAE,OAAO;YACdC,GAAG,EAAE,SAAS;YACdC,IAAI,EAAE;UACR,CAAC;QACH,CAAC,CAAC,CAAC;QACHf,WAAW,CAACI,iBAAiB,CAAC;MAChC,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD;IACF,CAAC;IAEDf,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEL,OAAA;IAAKuB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAErCxB,OAAA,CAACF,UAAU;MAACK,QAAQ,EAAEA;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlC5B,OAAA;MAAKuB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EACzCrB,QAAQ,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEkB,KAAK,kBAC1B7B,OAAA,CAACH,UAAU;QAAac,MAAM,EAAEA;MAAO,GAAtBkB,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}