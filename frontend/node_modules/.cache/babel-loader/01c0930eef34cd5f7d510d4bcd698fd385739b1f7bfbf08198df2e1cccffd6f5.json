{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport SparkCard from \"../../components/SparkCard/SparkCard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemorySparks = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const [sparks, setSparks] = useState([]);\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [userMap, setUserMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const sparkRes = await API.get(\"/sparks\");\n        const sparksFetched = Array.isArray(sparkRes.data) ? sparkRes.data : sparkRes.data.sparks || [];\n        setSparks(sparksFetched);\n        const reflectData = {};\n        const uids = new Set();\n        for (const spark of sparksFetched) {\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          const reflects = reflectRes.data.reflects || [];\n          reflectData[spark.id] = reflects;\n          reflects.forEach(mem => {\n            if (mem.userId) uids.add(mem.userId);\n          });\n        }\n        setReflectsMap(reflectData);\n        const uidArray = Array.from(uids);\n        if (uidArray.length) {\n          const userRes = await API.post(\"/user/uid-map\", {\n            uids: uidArray\n          });\n          const uidNameMap = userRes.data.users;\n          setUserMap(uidNameMap);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n  const handlePostSpark = async data => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks(prev => [newSpark, ...prev]);\n      setReflectsMap(prev => ({\n        ...prev,\n        [newSpark.id]: []\n      }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReflectsMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n  const handleLove = async sparkId => {\n    try {\n      const res = await API.post(\"/sparks/love\", {\n        sparkId\n      });\n      const {\n        loved\n      } = res.data;\n      setSparks(prev => prev.map(s => {\n        var _s$lovedBy;\n        if (s.id !== sparkId) return s;\n        const alreadyLoved = (_s$lovedBy = s.lovedBy) === null || _s$lovedBy === void 0 ? void 0 : _s$lovedBy.includes(currentUser.uid);\n        let updatedLovedBy = [...(s.lovedBy || [])];\n        if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n        if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter(uid => uid !== currentUser.uid);\n        return {\n          ...s,\n          lovedBy: updatedLovedBy,\n          loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1\n        };\n      }));\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n  const handleShare = async sparkId => {\n    try {\n      await API.post(\"/sparks/share\", {\n        sparkId\n      });\n      setSparks(prev => prev.map(s => s.id === sparkId ? {\n        ...s,\n        shareCount: (s.shareCount || 0) + 1\n      } : s));\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          className: \"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\",\n          children: \"\\u2728 Leave a Spark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full max-w-md rounded-xl bg-white p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostSparkForm, {\n            onSubmit: spark => {\n              handlePostSpark(spark);\n              setShowModal(false);\n            },\n            onClose: () => setShowModal(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Loading sparks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : sparks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No sparks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid sm:grid-cols-2 md:grid-cols-3 gap-4\",\n        children: sparks.map(spark => {\n          var _spark$lovedBy;\n          const sparkId = spark.id;\n          const loved = (_spark$lovedBy = spark.lovedBy) === null || _spark$lovedBy === void 0 ? void 0 : _spark$lovedBy.includes(currentUser.uid);\n          const reflects = reflectsMap[sparkId] || [];\n          return /*#__PURE__*/_jsxDEV(SparkCard, {\n            spark: spark,\n            loved: loved,\n            reflects: reflects,\n            userMap: userMap,\n            navigate: navigate,\n            onLove: () => handleLove(sparkId),\n            onShare: () => handleShare(sparkId),\n            onReply: () => {\n              setActiveReply(sparkId);\n              setReplyingToSpark(spark);\n            }\n          }, sparkId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), activeReply && replyingToSpark && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full max-w-3xl max-h-[90vh] overflow-y-auto rounded-xl bg-white p-6 shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setActiveReply(null);\n            setReplyingToSpark(null);\n          },\n          className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 text-center mb-3\",\n          children: \"Reflect on this Spark \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MemoryForm, {\n          replyingTo: replyingToSpark.id,\n          onAddMemory: mem => handleReplySubmit(mem, replyingToSpark.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MemorySparks, \"QodFhBKmwvw0TqGra+nK56CbXnc=\", false, function () {\n  return [useNavigate];\n});\n_c = MemorySparks;\nexport default MemorySparks;\nvar _c;\n$RefreshReg$(_c, \"MemorySparks\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","API","GlobalHeader","MemoryForm","PostSparkForm","SparkCard","jsxDEV","_jsxDEV","Fragment","_Fragment","MemorySparks","_s","currentUser","JSON","parse","localStorage","getItem","navigate","sparks","setSparks","reflectsMap","setReflectsMap","userMap","setUserMap","loading","setLoading","activeReply","setActiveReply","replyingToSpark","setReplyingToSpark","showModal","setShowModal","fetchAll","sparkRes","get","sparksFetched","Array","isArray","data","reflectData","uids","Set","spark","reflectRes","id","reflects","forEach","mem","userId","add","uidArray","from","length","userRes","post","uidNameMap","users","err","console","error","handlePostSpark","res","newSpark","prev","handleReplySubmit","newReply","sparkId","handleLove","loved","map","s","_s$lovedBy","alreadyLoved","lovedBy","includes","uid","updatedLovedBy","push","filter","loveCount","handleShare","shareCount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","onClose","_spark$lovedBy","onLove","onShare","onReply","replyingTo","onAddMemory","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport SparkCard from \"../../components/SparkCard/SparkCard\";\n\nconst MemorySparks = () => {\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  const [sparks, setSparks] = useState([]);\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [userMap, setUserMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const sparkRes = await API.get(\"/sparks\");\n        const sparksFetched = Array.isArray(sparkRes.data)\n          ? sparkRes.data\n          : sparkRes.data.sparks || [];\n        setSparks(sparksFetched);\n\n        const reflectData = {};\n        const uids = new Set();\n\n        for (const spark of sparksFetched) {\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          const reflects = reflectRes.data.reflects || [];\n          reflectData[spark.id] = reflects;\n          reflects.forEach((mem) => {\n            if (mem.userId) uids.add(mem.userId);\n          });\n        }\n\n        setReflectsMap(reflectData);\n\n        const uidArray = Array.from(uids);\n        if (uidArray.length) {\n          const userRes = await API.post(\"/user/uid-map\", { uids: uidArray });\n          const uidNameMap = userRes.data.users;\n          setUserMap(uidNameMap);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n\n  const handlePostSpark = async (data) => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks((prev) => [newSpark, ...prev]);\n      setReflectsMap((prev) => ({ ...prev, [newSpark.id]: [] }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReflectsMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n\n  const handleLove = async (sparkId) => {\n    try {\n      const res = await API.post(\"/sparks/love\", { sparkId });\n      const { loved } = res.data;\n      setSparks((prev) =>\n        prev.map((s) => {\n          if (s.id !== sparkId) return s;\n          const alreadyLoved = s.lovedBy?.includes(currentUser.uid);\n          let updatedLovedBy = [...(s.lovedBy || [])];\n          if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n          if (!loved && alreadyLoved)\n            updatedLovedBy = updatedLovedBy.filter((uid) => uid !== currentUser.uid);\n          return {\n            ...s,\n            lovedBy: updatedLovedBy,\n            loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1,\n          };\n        })\n      );\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n\n  const handleShare = async (sparkId) => {\n    try {\n      await API.post(\"/sparks/share\", { sparkId });\n      setSparks((prev) =>\n        prev.map((s) => (s.id === sparkId ? { ...s, shareCount: (s.shareCount || 0) + 1 } : s))\n      );\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n\n  return (\n    <>\n      <GlobalHeader />\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <div className=\"flex justify-end mb-4\">\n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\"\n          >\n            ✨ Leave a Spark\n          </button>\n        </div>\n\n        {showModal && (\n          <div className=\"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\">\n            <div className=\"relative w-full max-w-md rounded-xl bg-white p-6\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n              >\n                &times;\n              </button>\n              <PostSparkForm\n                onSubmit={(spark) => {\n                  handlePostSpark(spark);\n                  setShowModal(false);\n                }}\n                onClose={() => setShowModal(false)}\n              />\n            </div>\n          </div>\n        )}\n\n        {loading ? (\n          <p className=\"text-center text-gray-500\">Loading sparks...</p>\n        ) : sparks.length === 0 ? (\n          <p className=\"text-center text-gray-500\">No sparks yet</p>\n        ) : (\n          <div className=\"grid sm:grid-cols-2 md:grid-cols-3 gap-4\">\n            {sparks.map((spark) => {\n              const sparkId = spark.id;\n              const loved = spark.lovedBy?.includes(currentUser.uid);\n              const reflects = reflectsMap[sparkId] || [];\n\n              return (\n                <SparkCard\n                  key={sparkId}\n                  spark={spark}\n                  loved={loved}\n                  reflects={reflects}\n                  userMap={userMap}\n                  navigate={navigate}\n                  onLove={() => handleLove(sparkId)}\n                  onShare={() => handleShare(sparkId)}\n                  onReply={() => {\n                    setActiveReply(sparkId);\n                    setReplyingToSpark(spark);\n                  }}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {activeReply && replyingToSpark && (\n        <div className=\"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\">\n          <div className=\"relative w-full max-w-3xl max-h-[90vh] overflow-y-auto rounded-xl bg-white p-6 shadow-xl\">\n            <button\n              onClick={() => {\n                setActiveReply(null);\n                setReplyingToSpark(null);\n              }}\n              className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n            >\n              &times;\n            </button>\n            <h2 className=\"text-lg font-semibold text-gray-800 text-center mb-3\">\n              Reflect on this Spark ✨\n            </h2>\n            <MemoryForm\n              replyingTo={replyingToSpark.id}\n              onAddMemory={(mem) => handleReplySubmit(mem, replyingToSpark.id)}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MemorySparks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}