{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemorySparks = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const [sparks, setSparks] = useState([]);\n  const [visibleReflects, setVisibleReflects] = useState({});\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [userMap, setUserMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const sparkRes = await API.get(\"/sparks\");\n        const sparksFetched = Array.isArray(sparkRes.data) ? sparkRes.data : sparkRes.data.sparks || [];\n        setSparks(sparksFetched);\n        const reflectData = {};\n        const uids = new Set();\n        for (const spark of sparksFetched) {\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          const reflects = reflectRes.data.reflects || [];\n          reflectData[spark.id] = reflects;\n\n          // Collect userIds from all reflects\n          reflects.forEach(mem => {\n            if (mem.userId) uids.add(mem.userId);\n          });\n        }\n        setReflectsMap(reflectData);\n\n        // Fetch user details by UIDs\n        const uidArray = Array.from(uids);\n        if (uidArray.length) {\n          const userRes = await API.post(\"/users/batch\", {\n            uids: uidArray\n          });\n          const users = userRes.data.users;\n          const uidNameMap = {};\n          users.forEach(user => {\n            uidNameMap[user.uid] = user.name;\n          });\n          setUserMap(uidNameMap);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n  const handlePostSpark = async data => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks(prev => [newSpark, ...prev]);\n      setReflectsMap(prev => ({\n        ...prev,\n        [newSpark.id]: []\n      }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReflectsMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n  const handleLove = async sparkId => {\n    try {\n      const res = await API.post(\"/sparks/love\", {\n        sparkId\n      });\n      const {\n        loved\n      } = res.data;\n      setSparks(prev => prev.map(s => {\n        var _s$lovedBy;\n        if (s.id !== sparkId) return s;\n        const alreadyLoved = (_s$lovedBy = s.lovedBy) === null || _s$lovedBy === void 0 ? void 0 : _s$lovedBy.includes(currentUser.uid);\n        let updatedLovedBy = [...(s.lovedBy || [])];\n        if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n        if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter(uid => uid !== currentUser.uid);\n        return {\n          ...s,\n          lovedBy: updatedLovedBy,\n          loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1\n        };\n      }));\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n  const handleShare = async sparkId => {\n    try {\n      await API.post(\"/sparks/share\", {\n        sparkId\n      });\n      setSparks(prev => prev.map(s => s.id === sparkId ? {\n        ...s,\n        shareCount: (s.shareCount || 0) + 1\n      } : s));\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          className: \"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\",\n          children: \"\\u2728 Leave a Spark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full max-w-md rounded-xl bg-white p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostSparkForm, {\n            onSubmit: spark => {\n              handlePostSpark(spark);\n              setShowModal(false);\n            },\n            onClose: () => setShowModal(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Loading sparks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this) : sparks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No sparks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid sm:grid-cols-2 md:grid-cols-3 gap-4\",\n        children: sparks.map(spark => {\n          var _spark$lovedBy, _spark$location;\n          const loved = (_spark$lovedBy = spark.lovedBy) === null || _spark$lovedBy === void 0 ? void 0 : _spark$lovedBy.includes(currentUser.uid);\n          const reflects = reflectsMap[spark.id] || [];\n          const isVisible = visibleReflects[spark.id];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700 italic mb-2\",\n              children: [\"\\u201C\", spark.journal.slice(0, 120), spark.journal.length > 120 ? \"...\" : \"\", \"\\u201D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-semibold\",\n                children: [\"\\uD83E\\uDDE0 \", spark.mood]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-pink-100 text-pink-800 px-3 py-1 rounded-full text-xs font-semibold\",\n                children: [\"\\uD83C\\uDFA8 \", spark.vibe]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2\",\n              children: [(spark === null || spark === void 0 ? void 0 : (_spark$location = spark.location) === null || _spark$location === void 0 ? void 0 : _spark$location.description) || \"Unknown\", \" \\u2022 \", spark.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mt-1 cursor-pointer\",\n              onClick: () => navigate(`/profile/${spark.name}`),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`,\n                alt: spark.name,\n                className: \"w-6 h-6 rounded-full border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-700 font-medium\",\n                children: spark.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-4 border-t border-gray-200 pt-2 text-xs font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `flex-1 py-2 transition flex items-center justify-center gap-1 ${loved ? \"text-red-600 font-bold\" : \"\"}`,\n                onClick: () => handleLove(spark.id),\n                children: [\"\\u2764\\uFE0F Love \", spark.loveCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.loveCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => handleShare(spark.id),\n                children: [\"\\uD83D\\uDD01 Share \", spark.shareCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.shareCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition font-semibold flex items-center justify-center gap-1\",\n                onClick: () => setVisibleReflects(prev => ({\n                  ...prev,\n                  [spark.id]: !prev[spark.id]\n                })),\n                children: [\"\\uD83E\\uDE9E Reflect \", reflects.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-blue-500\",\n                  children: [\"(\", reflects.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 space-y-3 border-t pt-3 border-dashed\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setActiveReply(spark.id);\n                  setReplyingToSpark(spark);\n                },\n                className: \"text-[12px] text-indigo-600 hover:underline font-semibold mb-2\",\n                children: \"\\u2795 Add Your Reflection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this), reflects.map((mem, i) => {\n                var _mem$email, _mem$location;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${mem.name}`,\n                    alt: mem.name,\n                    className: \"w-7 h-7 rounded-full border\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-700 flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"font-semibold\",\n                        children: userMap[mem.userId] || mem.name || ((_mem$email = mem.email) === null || _mem$email === void 0 ? void 0 : _mem$email.split(\"@\")[0])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 31\n                      }, this), mem.meaning && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-blue-100 text-blue-700 px-2 py-0.5 rounded-full text-[10px]\",\n                        children: [\"Meaning: \", mem.meaning, \"/5\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 29\n                    }, this), mem.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: mem.image,\n                      alt: \"Memory\",\n                      className: \"my-2 w-full h-32 object-cover rounded-md shadow\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"italic text-gray-600 line-clamp-2\",\n                      children: [\"\\u201C\", mem.journal.slice(0, 200), \"...\\u201D\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[10px] text-gray-400 mt-1\",\n                      children: (_mem$location = mem.location) === null || _mem$location === void 0 ? void 0 : _mem$location.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 29\n                    }, this), Array.isArray(mem.tags) && mem.tags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-1 mt-2\",\n                      children: mem.tags.map((tag, idx) => {\n                        var _tag$email;\n                        return /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"bg-indigo-100 text-indigo-700 text-[10px] px-2 py-0.5 rounded-full\",\n                          children: tag.name || ((_tag$email = tag.email) === null || _tag$email === void 0 ? void 0 : _tag$email.split(\"@\")[0])\n                        }, idx, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 272,\n                          columnNumber: 35\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this)]\n          }, spark.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), activeReply && replyingToSpark && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full max-w-3xl max-h-[90vh] overflow-y-auto rounded-xl bg-white p-6 shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setActiveReply(null);\n            setReplyingToSpark(null);\n          },\n          className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 text-center mb-3\",\n          children: \"Reflect on this Spark \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MemoryForm, {\n          replyingTo: replyingToSpark.id,\n          onAddMemory: mem => handleReplySubmit(mem, replyingToSpark.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MemorySparks, \"bUFvwvFwohv8GJZ2OKZjcSOd+Ww=\", false, function () {\n  return [useNavigate];\n});\n_c = MemorySparks;\nexport default MemorySparks;\nvar _c;\n$RefreshReg$(_c, \"MemorySparks\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","API","GlobalHeader","MemoryForm","PostSparkForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MemorySparks","_s","currentUser","JSON","parse","localStorage","getItem","navigate","sparks","setSparks","visibleReflects","setVisibleReflects","reflectsMap","setReflectsMap","userMap","setUserMap","loading","setLoading","activeReply","setActiveReply","replyingToSpark","setReplyingToSpark","showModal","setShowModal","fetchAll","sparkRes","get","sparksFetched","Array","isArray","data","reflectData","uids","Set","spark","reflectRes","id","reflects","forEach","mem","userId","add","uidArray","from","length","userRes","post","users","uidNameMap","user","uid","name","err","console","error","handlePostSpark","res","newSpark","prev","handleReplySubmit","newReply","sparkId","handleLove","loved","map","s","_s$lovedBy","alreadyLoved","lovedBy","includes","updatedLovedBy","push","filter","loveCount","handleShare","shareCount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","onClose","_spark$lovedBy","_spark$location","isVisible","journal","slice","mood","vibe","location","description","time","src","alt","i","_mem$email","_mem$location","email","split","meaning","image","tags","tag","idx","_tag$email","replyingTo","onAddMemory","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\n\nconst MemorySparks = () => {\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  const [sparks, setSparks] = useState([]);\n  const [visibleReflects, setVisibleReflects] = useState({});\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [userMap, setUserMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const sparkRes = await API.get(\"/sparks\");\n        const sparksFetched = Array.isArray(sparkRes.data) ? sparkRes.data : sparkRes.data.sparks || [];\n        setSparks(sparksFetched);\n\n        const reflectData = {};\n        const uids = new Set();\n\n        for (const spark of sparksFetched) {\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          const reflects = reflectRes.data.reflects || [];\n          reflectData[spark.id] = reflects;\n\n          // Collect userIds from all reflects\n          reflects.forEach(mem => {\n            if (mem.userId) uids.add(mem.userId);\n          });\n        }\n\n        setReflectsMap(reflectData);\n\n        // Fetch user details by UIDs\n        const uidArray = Array.from(uids);\n        if (uidArray.length) {\n          const userRes = await API.post(\"/users/batch\", { uids: uidArray });\n          const users = userRes.data.users;\n          const uidNameMap = {};\n          users.forEach(user => {\n            uidNameMap[user.uid] = user.name;\n          });\n          setUserMap(uidNameMap);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n\n  const handlePostSpark = async (data) => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks((prev) => [newSpark, ...prev]);\n      setReflectsMap((prev) => ({\n        ...prev,\n        [newSpark.id]: [],\n      }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReflectsMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n\n  const handleLove = async (sparkId) => {\n    try {\n      const res = await API.post(\"/sparks/love\", { sparkId });\n      const { loved } = res.data;\n      setSparks((prev) =>\n        prev.map((s) => {\n          if (s.id !== sparkId) return s;\n          const alreadyLoved = s.lovedBy?.includes(currentUser.uid);\n          let updatedLovedBy = [...(s.lovedBy || [])];\n          if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n          if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter((uid) => uid !== currentUser.uid);\n          return {\n            ...s,\n            lovedBy: updatedLovedBy,\n            loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1,\n          };\n        })\n      );\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n\n  const handleShare = async (sparkId) => {\n    try {\n      await API.post(\"/sparks/share\", { sparkId });\n      setSparks((prev) =>\n        prev.map((s) =>\n          s.id === sparkId ? { ...s, shareCount: (s.shareCount || 0) + 1 } : s\n        )\n      );\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n\n  return (\n    <>\n      <GlobalHeader />\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <div className=\"flex justify-end mb-4\">\n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\"\n          >\n            ✨ Leave a Spark\n          </button>\n        </div>\n\n        {showModal && (\n          <div className=\"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\">\n            <div className=\"relative w-full max-w-md rounded-xl bg-white p-6\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n              >\n                &times;\n              </button>\n              <PostSparkForm\n                onSubmit={(spark) => {\n                  handlePostSpark(spark);\n                  setShowModal(false);\n                }}\n                onClose={() => setShowModal(false)}\n              />\n            </div>\n          </div>\n        )}\n\n        {loading ? (\n          <p className=\"text-center text-gray-500\">Loading sparks...</p>\n        ) : sparks.length === 0 ? (\n          <p className=\"text-center text-gray-500\">No sparks yet</p>\n        ) : (\n          <div className=\"grid sm:grid-cols-2 md:grid-cols-3 gap-4\">\n            {sparks.map((spark) => {\n              const loved = spark.lovedBy?.includes(currentUser.uid);\n              const reflects = reflectsMap[spark.id] || [];\n              const isVisible = visibleReflects[spark.id];\n\n              return (\n                <div key={spark.id} className=\"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\">\n                  <p className=\"text-sm text-gray-700 italic mb-2\">\n                    “{spark.journal.slice(0, 120)}{spark.journal.length > 120 ? \"...\" : \"\"}”\n                  </p>\n\n                  <div className=\"flex flex-wrap gap-2 mb-2\">\n                    <span className=\"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-semibold\">\n                      🧠 {spark.mood}\n                    </span>\n                    <span className=\"bg-pink-100 text-pink-800 px-3 py-1 rounded-full text-xs font-semibold\">\n                      🎨 {spark.vibe}\n                    </span>\n                  </div>\n\n                  <p className=\"text-xs text-gray-500 mb-2\">\n                    {spark?.location?.description || \"Unknown\"} • {spark.time}\n                  </p>\n\n                  <div\n                    className=\"flex items-center gap-2 mt-1 cursor-pointer\"\n                    onClick={() => navigate(`/profile/${spark.name}`)}\n                  >\n                    <img\n                      src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`}\n                      alt={spark.name}\n                      className=\"w-6 h-6 rounded-full border\"\n                    />\n                    <span className=\"text-xs text-gray-700 font-medium\">{spark.name}</span>\n                  </div>\n\n                  {/* Buttons */}\n                  <div className=\"flex justify-between mt-4 border-t border-gray-200 pt-2 text-xs font-medium\">\n                    <button\n                      className={`flex-1 py-2 transition flex items-center justify-center gap-1 ${\n                        loved ? \"text-red-600 font-bold\" : \"\"\n                      }`}\n                      onClick={() => handleLove(spark.id)}\n                    >\n                      ❤️ Love {spark.loveCount > 0 && <span className=\"text-gray-500\">({spark.loveCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => handleShare(spark.id)}\n                    >\n                      🔁 Share {spark.shareCount > 0 && <span className=\"text-gray-500\">({spark.shareCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition font-semibold flex items-center justify-center gap-1\"\n                      onClick={() =>\n                        setVisibleReflects((prev) => ({\n                          ...prev,\n                          [spark.id]: !prev[spark.id],\n                        }))\n                      }\n                    >\n                      🪞 Reflect {reflects.length > 0 && <span className=\"text-blue-500\">({reflects.length})</span>}\n                    </button>\n                  </div>\n\n                  {/* Reflects Section */}\n                  {isVisible && (\n                    <div className=\"mt-4 space-y-3 border-t pt-3 border-dashed\">\n                      <button\n                        onClick={() => {\n                          setActiveReply(spark.id);\n                          setReplyingToSpark(spark);\n                        }}\n                        className=\"text-[12px] text-indigo-600 hover:underline font-semibold mb-2\"\n                      >\n                        ➕ Add Your Reflection\n                      </button>\n\n                      {reflects.map((mem, i) => (\n                        <div key={i} className=\"flex items-start gap-2\">\n                          <img\n                            src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${mem.name}`}\n                            alt={mem.name}\n                            className=\"w-7 h-7 rounded-full border\"\n                          />\n                          <div className=\"text-xs text-gray-700 flex-1\">\n                            <div className=\"flex justify-between\">\n                              <p className=\"font-semibold\">\n                                {userMap[mem.userId] || mem.name || mem.email?.split(\"@\")[0]}\n                              </p>\n                              {mem.meaning && (\n                                <span className=\"bg-blue-100 text-blue-700 px-2 py-0.5 rounded-full text-[10px]\">\n                                  Meaning: {mem.meaning}/5\n                                </span>\n                              )}\n                            </div>\n                            {mem.image && (\n                              <img\n                                src={mem.image}\n                                alt=\"Memory\"\n                                className=\"my-2 w-full h-32 object-cover rounded-md shadow\"\n                              />\n                            )}\n                            <p className=\"italic text-gray-600 line-clamp-2\">\n                              “{mem.journal.slice(0, 200)}...”\n                            </p>\n                            <p className=\"text-[10px] text-gray-400 mt-1\">{mem.location?.description}</p>\n                            {Array.isArray(mem.tags) && mem.tags.length > 0 && (\n                              <div className=\"flex flex-wrap gap-1 mt-2\">\n                                {mem.tags.map((tag, idx) => (\n                                  <span\n                                    key={idx}\n                                    className=\"bg-indigo-100 text-indigo-700 text-[10px] px-2 py-0.5 rounded-full\"\n                                  >\n                                    {tag.name || tag.email?.split(\"@\")[0]}\n                                  </span>\n                                ))}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {/* Reflection Modal */}\n      {activeReply && replyingToSpark && (\n        <div className=\"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\">\n          <div className=\"relative w-full max-w-3xl max-h-[90vh] overflow-y-auto rounded-xl bg-white p-6 shadow-xl\">\n            <button\n              onClick={() => {\n                setActiveReply(null);\n                setReplyingToSpark(null);\n              }}\n              className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n            >\n              &times;\n            </button>\n            <h2 className=\"text-lg font-semibold text-gray-800 text-center mb-3\">\n              Reflect on this Spark ✨\n            </h2>\n            <MemoryForm\n              replyingTo={replyingToSpark.id}\n              onAddMemory={(mem) => handleReplySubmit(mem, replyingToSpark.id)}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MemorySparks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}