{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport SparkCard from \"../../components/SparkCard/SparkCard\";\nimport ReplyForm from \"../../components/ReplyForm/ReplyForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemorySparks = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const [sparks, setSparks] = useState([]);\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [repliesMap, setRepliesMap] = useState({});\n  const [userMap, setUserMap] = useState({});\n  const [expandedSparkId, setExpandedSparkId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const sparkRes = await API.get(\"/sparks\");\n        const sparksFetched = Array.isArray(sparkRes.data) ? sparkRes.data : sparkRes.data.sparks || [];\n        setSparks(sparksFetched);\n        const reflectData = {};\n        const replyData = {};\n        const uids = new Set();\n        for (const spark of sparksFetched) {\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          const reflects = reflectRes.data.reflects || [];\n          reflectData[spark.id] = reflects;\n          const replyRes = await API.get(`/sparks/${spark.id}/replies`);\n          const replies = replyRes.data.replies || [];\n          replyData[spark.id] = replies;\n          reflects.forEach(mem => {\n            if (mem.userId) uids.add(mem.userId);\n          });\n          replies.forEach(r => {\n            if (r.userId) uids.add(r.userId);\n          });\n        }\n        setReflectsMap(reflectData);\n        setRepliesMap(replyData);\n        const uidArray = Array.from(uids);\n        if (uidArray.length) {\n          const userRes = await API.post(\"/user/uid-map\", {\n            uids: uidArray\n          });\n          setUserMap(userRes.data.users);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n  const handleToggleReflect = sparkId => {\n    setExpandedSparkId(prev => prev === sparkId ? null : sparkId);\n  };\n  const handleToggleReply = sparkId => {\n    setActiveReply(prev => prev === sparkId ? null : sparkId);\n    setReplyingToSpark(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === sparkId ? null : sparks.find(s => s.id === sparkId));\n  };\n  const handlePostSpark = async data => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks(prev => [newSpark, ...prev]);\n      setReflectsMap(prev => ({\n        ...prev,\n        [newSpark.id]: []\n      }));\n      setRepliesMap(prev => ({\n        ...prev,\n        [newSpark.id]: []\n      }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n  const handleReplySubmit = (newReply, sparkId) => {\n    setRepliesMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n  const handleLove = async sparkId => {\n    try {\n      const res = await API.post(\"/sparks/love\", {\n        sparkId\n      });\n      const {\n        loved\n      } = res.data;\n      setSparks(prev => prev.map(s => {\n        var _s$lovedBy;\n        if (s.id !== sparkId) return s;\n        const alreadyLoved = (_s$lovedBy = s.lovedBy) === null || _s$lovedBy === void 0 ? void 0 : _s$lovedBy.includes(currentUser.uid);\n        let updatedLovedBy = [...(s.lovedBy || [])];\n        if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n        if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter(uid => uid !== user.uid);\n        return {\n          ...s,\n          lovedBy: updatedLovedBy,\n          loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1\n        };\n      }));\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n  const handleShare = async sparkId => {\n    try {\n      await API.post(\"/sparks/share\", {\n        sparkId\n      });\n      setSparks(prev => prev.map(s => s.id === sparkId ? {\n        ...s,\n        shareCount: (s.shareCount || 0) + 1\n      } : s));\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          className: \"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\",\n          children: \"\\u2728 Leave a Spark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full max-w-md rounded-xl bg-white p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostSparkForm, {\n            onSubmit: spark => {\n              handlePostSpark(spark);\n              setShowModal(false);\n            },\n            onClose: () => setShowModal(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Loading sparks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this) : sparks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No sparks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: sparks.map(spark => {\n          var _spark$lovedBy;\n          const sparkId = spark.id;\n          const loved = (_spark$lovedBy = spark.lovedBy) === null || _spark$lovedBy === void 0 ? void 0 : _spark$lovedBy.includes(currentUser.uid);\n          const reflects = reflectsMap[sparkId] || [];\n          const replies = repliesMap[sparkId] || [];\n          const showReplies = activeReply === sparkId;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-md mx-auto bg-white shadow-md rounded-xl p-4\",\n            children: [/*#__PURE__*/_jsxDEV(SparkCard, {\n              spark: spark,\n              userMap: userMap,\n              navigate: navigate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between text-xs font-medium pt-2 border-t mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `flex-1 py-2 transition flex items-center justify-center gap-1 ${loved ? \"text-red-600 font-bold\" : \"\"}`,\n                onClick: () => handleLove(sparkId),\n                children: [\"\\u2764\\uFE0F Love \", spark.loveCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.loveCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => handleShare(sparkId),\n                children: [\"\\uD83D\\uDD01 Share \", spark.shareCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.shareCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => handleToggleReflect(sparkId),\n                children: [\"\\uD83E\\uDE9E Reflect \", reflects.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-blue-500\",\n                  children: [\"(\", reflects.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => handleToggleReply(sparkId),\n                children: [\"\\uD83D\\uDCAC Reply \", replies.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-blue-500\",\n                  children: [\"(\", replies.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), expandedSparkId === sparkId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 space-y-3 border-t pt-3 border-dashed\",\n              children: reflects.map((mem, i) => {\n                var _mem$email, _mem$location;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${mem.name}`,\n                    alt: mem.name,\n                    className: \"w-7 h-7 rounded-full border\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-700 flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"font-semibold\",\n                        children: userMap[mem.userId] || mem.name || ((_mem$email = mem.email) === null || _mem$email === void 0 ? void 0 : _mem$email.split(\"@\")[0])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 31\n                      }, this), mem.meaning && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-blue-100 text-blue-700 px-2 py-0.5 rounded-full text-[10px]\",\n                        children: [\"Meaning: \", mem.meaning, \"/5\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 29\n                    }, this), mem.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: mem.image,\n                      alt: \"Memory\",\n                      className: \"my-2 w-full h-32 object-cover rounded-md shadow\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"italic text-gray-600\",\n                      children: [\"\\u201C\", mem.journal.slice(0, 200), \"...\\u201D\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[10px] text-gray-400 mt-1\",\n                      children: (_mem$location = mem.location) === null || _mem$location === void 0 ? void 0 : _mem$location.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this), showReplies && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 space-y-3 border-t pt-3 border-dashed\",\n              children: [replies.map((reply, idx) => {\n                var _reply$email;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${reply.name}`,\n                    alt: reply.name,\n                    className: \"w-6 h-6 rounded-full border\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-700 flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-semibold\",\n                      children: userMap[reply.userId] || reply.name || ((_reply$email = reply.email) === null || _reply$email === void 0 ? void 0 : _reply$email.split(\"@\")[0])\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-600\",\n                      children: reply.journal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 27\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(ReplyForm, {\n                replyingTo: sparkId,\n                onAddReply: handleReplySubmit,\n                onClose: () => {\n                  setActiveReply(null);\n                  setReplyingToSpark(null);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this)]\n          }, sparkId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MemorySparks, \"NKemql6CiAaZB7QUW/spA0QMuW0=\", false, function () {\n  return [useNavigate];\n});\n_c = MemorySparks;\nexport default MemorySparks;\nvar _c;\n$RefreshReg$(_c, \"MemorySparks\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","API","GlobalHeader","MemoryForm","PostSparkForm","SparkCard","ReplyForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MemorySparks","_s","currentUser","JSON","parse","localStorage","getItem","navigate","sparks","setSparks","reflectsMap","setReflectsMap","repliesMap","setRepliesMap","userMap","setUserMap","expandedSparkId","setExpandedSparkId","loading","setLoading","activeReply","setActiveReply","replyingToSpark","setReplyingToSpark","showModal","setShowModal","fetchAll","sparkRes","get","sparksFetched","Array","isArray","data","reflectData","replyData","uids","Set","spark","reflectRes","id","reflects","replyRes","replies","forEach","mem","userId","add","r","uidArray","from","length","userRes","post","users","err","console","error","handleToggleReflect","sparkId","prev","handleToggleReply","find","s","handlePostSpark","res","newSpark","handleReplySubmit","newReply","handleLove","loved","map","_s$lovedBy","alreadyLoved","lovedBy","includes","uid","updatedLovedBy","push","filter","user","loveCount","handleShare","shareCount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","onClose","_spark$lovedBy","showReplies","i","_mem$email","_mem$location","src","name","alt","email","split","meaning","image","journal","slice","location","description","reply","idx","_reply$email","replyingTo","onAddReply","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport SparkCard from \"../../components/SparkCard/SparkCard\";\nimport ReplyForm from \"../../components/ReplyForm/ReplyForm\";\n\nconst MemorySparks = () => {\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  const [sparks, setSparks] = useState([]);\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [repliesMap, setRepliesMap] = useState({});\n  const [userMap, setUserMap] = useState({});\n  const [expandedSparkId, setExpandedSparkId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const sparkRes = await API.get(\"/sparks\");\n        const sparksFetched = Array.isArray(sparkRes.data)\n          ? sparkRes.data\n          : sparkRes.data.sparks || [];\n        setSparks(sparksFetched);\n\n        const reflectData = {};\n        const replyData = {};\n        const uids = new Set();\n\n        for (const spark of sparksFetched) {\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          const reflects = reflectRes.data.reflects || [];\n          reflectData[spark.id] = reflects;\n\n          const replyRes = await API.get(`/sparks/${spark.id}/replies`);\n          const replies = replyRes.data.replies || [];\n          replyData[spark.id] = replies;\n\n          reflects.forEach((mem) => { if (mem.userId) uids.add(mem.userId); });\n          replies.forEach((r) => { if (r.userId) uids.add(r.userId); });\n        }\n\n        setReflectsMap(reflectData);\n        setRepliesMap(replyData);\n\n        const uidArray = Array.from(uids);\n        if (uidArray.length) {\n          const userRes = await API.post(\"/user/uid-map\", { uids: uidArray });\n          setUserMap(userRes.data.users);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAll();\n  }, []);\n\n  const handleToggleReflect = (sparkId) => {\n    setExpandedSparkId((prev) => (prev === sparkId ? null : sparkId));\n  };\n\n  const handleToggleReply = (sparkId) => {\n    setActiveReply((prev) => (prev === sparkId ? null : sparkId));\n    setReplyingToSpark((prev) => (prev?.id === sparkId ? null : sparks.find(s => s.id === sparkId)));\n  };\n\n  const handlePostSpark = async (data) => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks((prev) => [newSpark, ...prev]);\n      setReflectsMap((prev) => ({ ...prev, [newSpark.id]: [] }));\n      setRepliesMap((prev) => ({ ...prev, [newSpark.id]: [] }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n\n  const handleReplySubmit = (newReply, sparkId) => {\n    setRepliesMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n\n  const handleLove = async (sparkId) => {\n    try {\n      const res = await API.post(\"/sparks/love\", { sparkId });\n      const { loved } = res.data;\n      setSparks((prev) =>\n        prev.map((s) => {\n          if (s.id !== sparkId) return s;\n          const alreadyLoved = s.lovedBy?.includes(currentUser.uid);\n          let updatedLovedBy = [...(s.lovedBy || [])];\n          if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n          if (!loved && alreadyLoved)\n            updatedLovedBy = updatedLovedBy.filter((uid) => uid !== user.uid);\n          return {\n            ...s,\n            lovedBy: updatedLovedBy,\n            loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1,\n          };\n        })\n      );\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n\n  const handleShare = async (sparkId) => {\n    try {\n      await API.post(\"/sparks/share\", { sparkId });\n      setSparks((prev) =>\n        prev.map((s) => (s.id === sparkId ? { ...s, shareCount: (s.shareCount || 0) + 1 } : s))\n      );\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n\n  return (\n    <>\n      <GlobalHeader />\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <div className=\"flex justify-end mb-4\">\n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\"\n          >\n            ✨ Leave a Spark\n          </button>\n        </div>\n\n        {showModal && (\n          <div className=\"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\">\n            <div className=\"relative w-full max-w-md rounded-xl bg-white p-6\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n              >\n                &times;\n              </button>\n              <PostSparkForm\n                onSubmit={(spark) => {\n                  handlePostSpark(spark);\n                  setShowModal(false);\n                }}\n                onClose={() => setShowModal(false)}\n              />\n            </div>\n          </div>\n        )}\n\n        {loading ? (\n          <p className=\"text-center text-gray-500\">Loading sparks...</p>\n        ) : sparks.length === 0 ? (\n          <p className=\"text-center text-gray-500\">No sparks yet</p>\n        ) : (\n          <div className=\"space-y-6\">\n            {sparks.map((spark) => {\n              const sparkId = spark.id;\n              const loved = spark.lovedBy?.includes(currentUser.uid);\n              const reflects = reflectsMap[sparkId] || [];\n              const replies = repliesMap[sparkId] || [];\n\n              const showReplies = activeReply === sparkId;\n\n              return (\n                <div key={sparkId} className=\"max-w-md mx-auto bg-white shadow-md rounded-xl p-4\">\n                  <SparkCard spark={spark} userMap={userMap} navigate={navigate} />\n\n                  <div className=\"flex justify-between text-xs font-medium pt-2 border-t mt-2\">\n                    <button\n                      className={`flex-1 py-2 transition flex items-center justify-center gap-1 ${\n                        loved ? \"text-red-600 font-bold\" : \"\"\n                      }`}\n                      onClick={() => handleLove(sparkId)}\n                    >\n                      ❤️ Love {spark.loveCount > 0 && <span className=\"text-gray-500\">({spark.loveCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => handleShare(sparkId)}\n                    >\n                      🔁 Share {spark.shareCount > 0 && <span className=\"text-gray-500\">({spark.shareCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => handleToggleReflect(sparkId)}\n                    >\n                      🪞 Reflect {reflects.length > 0 && <span className=\"text-blue-500\">({reflects.length})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => handleToggleReply(sparkId)}\n                    >\n                      💬 Reply {replies.length > 0 && <span className=\"text-blue-500\">({replies.length})</span>}\n                    </button>\n                  </div>\n\n                  {expandedSparkId === sparkId && (\n                    <div className=\"mt-3 space-y-3 border-t pt-3 border-dashed\">\n                      {reflects.map((mem, i) => (\n                        <div key={i} className=\"flex items-start gap-2\">\n                          <img\n                            src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${mem.name}`}\n                            alt={mem.name}\n                            className=\"w-7 h-7 rounded-full border\"\n                          />\n                          <div className=\"text-xs text-gray-700 flex-1\">\n                            <div className=\"flex justify-between\">\n                              <p className=\"font-semibold\">\n                                {userMap[mem.userId] || mem.name || mem.email?.split(\"@\")[0]}\n                              </p>\n                              {mem.meaning && (\n                                <span className=\"bg-blue-100 text-blue-700 px-2 py-0.5 rounded-full text-[10px]\">\n                                  Meaning: {mem.meaning}/5\n                                </span>\n                              )}\n                            </div>\n                            {mem.image && (\n                              <img\n                                src={mem.image}\n                                alt=\"Memory\"\n                                className=\"my-2 w-full h-32 object-cover rounded-md shadow\"\n                              />\n                            )}\n                            <p className=\"italic text-gray-600\">“{mem.journal.slice(0, 200)}...”</p>\n                            <p className=\"text-[10px] text-gray-400 mt-1\">{mem.location?.description}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {showReplies && (\n                    <div className=\"mt-3 space-y-3 border-t pt-3 border-dashed\">\n                      {replies.map((reply, idx) => (\n                        <div key={idx} className=\"flex items-start gap-2\">\n                          <img\n                            src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${reply.name}`}\n                            alt={reply.name}\n                            className=\"w-6 h-6 rounded-full border\"\n                          />\n                          <div className=\"text-xs text-gray-700 flex-1\">\n                            <p className=\"font-semibold\">{userMap[reply.userId] || reply.name || reply.email?.split(\"@\")[0]}</p>\n                            <p className=\"text-gray-600\">{reply.journal}</p>\n                          </div>\n                        </div>\n                      ))}\n\n                      <ReplyForm\n                        replyingTo={sparkId}\n                        onAddReply={handleReplySubmit}\n                        onClose={() => {\n                          setActiveReply(null);\n                          setReplyingToSpark(null);\n                        }}\n                      />\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MemorySparks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}