{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/HomeFeed/HomeFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\nimport API from \"../../utils/api\";\nimport MemoryCard from \"../../components/MemoryCard/MemoryCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeFeed = () => {\n  _s();\n  const [memories, setMemories] = useState([]);\n  const groupRefs = useRef({});\n  const threadRefs = useRef({});\n  useLayoutEffect(() => {\n    Object.entries(groupRefs.current).forEach(([date, groupEl]) => {\n      const container = groupEl.querySelector(\".timeline-sequence\");\n      const thread = threadRefs.current[date];\n      if (container && thread) {\n        const dateStart = groupEl.getBoundingClientRect().left + 120;\n        const end = container.getBoundingClientRect().right;\n        const width = end - dateStart;\n        thread.style.width = `${width}px`;\n      }\n    });\n  }, [memories]);\n  useEffect(() => {\n    const fetchMemories = async () => {\n      try {\n        const res = await API.get(\"/memories\");\n        const formatted = res.data.memories.map(m => {\n          const createdAt = new Date(m.createdAt._seconds * 1000);\n          return {\n            ...m,\n            createdAt,\n            dateFormatted: createdAt.toLocaleDateString(\"en-US\", {\n              month: \"short\",\n              day: \"numeric\",\n              year: \"numeric\"\n            }),\n            timeFormatted: createdAt.toLocaleTimeString(\"en-US\", {\n              hour: \"numeric\",\n              minute: \"2-digit\",\n              hour12: true\n            })\n          };\n        });\n        setMemories(formatted); // chronological\n      } catch (err) {\n        console.error(\"❌ Failed to load memories:\", err);\n      }\n    };\n    fetchMemories();\n  }, []);\n  const groupedMemories = memories.reduce((acc, mem) => {\n    if (!acc[mem.dateFormatted]) acc[mem.dateFormatted] = [];\n    acc[mem.dateFormatted].push(mem);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-24 max-w-7xl mx-auto px-4 pt-10\",\n    children: Object.entries(groupedMemories).map(([date, group], i) => {\n      const sortedGroup = [...group].sort((a, b) => a.createdAt - b.createdAt); // oldest to newest\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full\",\n        ref: el => groupRefs.current[date] = el,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/2 left-[7.5rem] h-[2px] bg-blue-300 opacity-70 z-0 rounded-full\",\n          ref: el => threadRefs.current[date] = el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center relative w-full overflow-x-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shrink-0 w-[7.5rem] flex justify-end pr-2 z-10\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-100 text-blue-700 text-xs font-medium px-3 py-1 rounded-full shadow-md\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-12 pl-2 z-10 min-w-max timeline-sequence\",\n              children: sortedGroup.map((memory, j) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative flex flex-col items-center w-fit\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2 text-[11px] text-gray-500 font-medium whitespace-nowrap\",\n                    children: memory.timeFormatted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MemoryCard, {\n                  memory: memory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this)]\n              }, j, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeFeed, \"FBzcwPKzc/JD+koDH5iXO+Bw8ow=\");\n_c = HomeFeed;\nexport default HomeFeed;\nvar _c;\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLayoutEffect","API","MemoryCard","jsxDEV","_jsxDEV","HomeFeed","_s","memories","setMemories","groupRefs","threadRefs","Object","entries","current","forEach","date","groupEl","container","querySelector","thread","dateStart","getBoundingClientRect","left","end","right","width","style","fetchMemories","res","get","formatted","data","map","m","createdAt","Date","_seconds","dateFormatted","toLocaleDateString","month","day","year","timeFormatted","toLocaleTimeString","hour","minute","hour12","err","console","error","groupedMemories","reduce","acc","mem","push","className","children","group","i","sortedGroup","sort","a","b","ref","el","fileName","_jsxFileName","lineNumber","columnNumber","memory","j","Fragment","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/HomeFeed/HomeFeed.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\nimport API from \"../../utils/api\";\nimport MemoryCard from \"../../components/MemoryCard/MemoryCard\";\n\nconst HomeFeed = () => {\n  const [memories, setMemories] = useState([]);\n  const groupRefs = useRef({});\n  const threadRefs = useRef({});\n\n  useLayoutEffect(() => {\n    Object.entries(groupRefs.current).forEach(([date, groupEl]) => {\n      const container = groupEl.querySelector(\".timeline-sequence\");\n      const thread = threadRefs.current[date];\n\n      if (container && thread) {\n        const dateStart = groupEl.getBoundingClientRect().left + 120;\n        const end = container.getBoundingClientRect().right;\n        const width = end - dateStart;\n        thread.style.width = `${width}px`;\n      }\n    });\n  }, [memories]);\n\n  useEffect(() => {\n    const fetchMemories = async () => {\n      try {\n        const res = await API.get(\"/memories\");\n        const formatted = res.data.memories.map((m) => {\n          const createdAt = new Date(m.createdAt._seconds * 1000);\n          return {\n            ...m,\n            createdAt,\n            dateFormatted: createdAt.toLocaleDateString(\"en-US\", {\n              month: \"short\",\n              day: \"numeric\",\n              year: \"numeric\",\n            }),\n            timeFormatted: createdAt.toLocaleTimeString(\"en-US\", {\n              hour: \"numeric\",\n              minute: \"2-digit\",\n              hour12: true,\n            }),\n          };\n        });\n        setMemories(formatted); // chronological\n      } catch (err) {\n        console.error(\"❌ Failed to load memories:\", err);\n      }\n    };\n\n    fetchMemories();\n  }, []);\n\n  const groupedMemories = memories.reduce((acc, mem) => {\n    if (!acc[mem.dateFormatted]) acc[mem.dateFormatted] = [];\n    acc[mem.dateFormatted].push(mem);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"flex flex-col gap-24 max-w-7xl mx-auto px-4 pt-10\">\n      {Object.entries(groupedMemories).map(([date, group], i) => {\n        const sortedGroup = [...group].sort((a, b) => a.createdAt - b.createdAt); // oldest to newest\n\n        return (\n          <div\n            key={i}\n            className=\"relative w-full\"\n            ref={(el) => (groupRefs.current[date] = el)}\n          >\n            {/* Single horizontal thread */}\n            <div\n              className=\"absolute top-1/2 left-[7.5rem] h-[2px] bg-blue-300 opacity-70 z-0 rounded-full\"\n              ref={(el) => (threadRefs.current[date] = el)}\n            />\n\n            <div className=\"flex items-center relative w-full overflow-x-auto\">\n              {/* Date */}\n              <div className=\"shrink-0 w-[7.5rem] flex justify-end pr-2 z-10\">\n                <div className=\"bg-blue-100 text-blue-700 text-xs font-medium px-3 py-1 rounded-full shadow-md\">\n                  {date}\n                </div>\n              </div>\n\n              {/* Timeline: time -> card */}\n              <div className=\"overflow-x-auto\">\n                <div className=\"flex items-center gap-12 pl-2 z-10 min-w-max timeline-sequence\">\n                  {sortedGroup.map((memory, j) => (\n                    <React.Fragment key={j}>\n                      <div className=\"relative flex flex-col items-center w-fit\">\n                        <div className=\"mb-2 text-[11px] text-gray-500 font-medium whitespace-nowrap\">\n                          {memory.timeFormatted}\n                        </div>\n                      </div>\n\n                      <MemoryCard memory={memory} />\n                    </React.Fragment>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default HomeFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}