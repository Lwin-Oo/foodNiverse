{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemorySparks = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const [sparks, setSparks] = useState([]);\n  const [replyMap, setReplyMap] = useState({});\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const res = await API.get(\"/sparks\");\n        const fetched = Array.isArray(res.data) ? res.data : res.data.sparks || [];\n        setSparks(fetched);\n        const replyData = {};\n        const reflectData = {};\n        for (const spark of fetched) {\n          const replyRes = await API.get(`/memories/replies/${spark.id}`);\n          replyData[spark.id] = replyRes.data.replies || [];\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          reflectData[spark.id] = reflectRes.data.reflects || [];\n        }\n        setReplyMap(replyData);\n        setReflectsMap(reflectData);\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n  const handlePostSpark = async data => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks(prev => [newSpark, ...prev]);\n      setReflectsMap(prev => ({\n        ...prev,\n        [newSpark.id]: []\n      }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReplyMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setReflectsMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n  const handleLove = async sparkId => {\n    try {\n      const res = await API.post(\"/sparks/love\", {\n        sparkId\n      });\n      const {\n        loved\n      } = res.data;\n      setSparks(prev => prev.map(s => {\n        var _s$lovedBy;\n        if (s.id !== sparkId) return s;\n        const alreadyLoved = (_s$lovedBy = s.lovedBy) === null || _s$lovedBy === void 0 ? void 0 : _s$lovedBy.includes(currentUser.uid);\n        let updatedLovedBy = [...(s.lovedBy || [])];\n        if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n        if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter(uid => uid !== currentUser.uid);\n        return {\n          ...s,\n          lovedBy: updatedLovedBy,\n          loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1\n        };\n      }));\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n  const handleShare = async sparkId => {\n    try {\n      await API.post(\"/sparks/share\", {\n        sparkId\n      });\n      setSparks(prev => prev.map(s => s.id === sparkId ? {\n        ...s,\n        shareCount: (s.shareCount || 0) + 1\n      } : s));\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          className: \"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\",\n          children: \"\\u2728 Leave a Spark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full max-w-md rounded-xl bg-white p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostSparkForm, {\n            onSubmit: spark => {\n              handlePostSpark(spark);\n              setShowModal(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Loading sparks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : sparks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No sparks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid sm:grid-cols-2 md:grid-cols-3 gap-4\",\n        children: sparks.map(spark => {\n          var _spark$lovedBy, _spark$location;\n          const loved = (_spark$lovedBy = spark.lovedBy) === null || _spark$lovedBy === void 0 ? void 0 : _spark$lovedBy.includes(currentUser.uid);\n          const reflects = reflectsMap[spark.id] || [];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700 italic mb-2\",\n              children: [\"\\u201C\", spark.journal.slice(0, 120), spark.journal.length > 120 ? \"...\" : \"\", \"\\u201D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-semibold\",\n                children: [\"\\uD83E\\uDDE0 \", spark.mood]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-pink-100 text-pink-800 px-3 py-1 rounded-full text-xs font-semibold\",\n                children: [\"\\uD83C\\uDFA8 \", spark.vibe]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2\",\n              children: [(spark === null || spark === void 0 ? void 0 : (_spark$location = spark.location) === null || _spark$location === void 0 ? void 0 : _spark$location.description) || \"Unknown\", \" \\u2022 \", spark.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mt-1 cursor-pointer\",\n              onClick: () => navigate(`/profile/${spark.name}`),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`,\n                alt: spark.name,\n                className: \"w-6 h-6 rounded-full border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-700 font-medium\",\n                children: spark.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-4 border-t border-gray-200 pt-2 text-xs font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `flex-1 py-2 transition flex items-center justify-center gap-1 ${loved ? \"text-red-600 font-bold\" : \"\"}`,\n                onClick: () => handleLove(spark.id),\n                children: [\"\\u2764\\uFE0F Love \", spark.loveCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.loveCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => handleShare(spark.id),\n                children: [\"\\uD83D\\uDD01 Share \", spark.shareCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.shareCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition font-semibold flex items-center justify-center gap-1\",\n                onClick: () => {\n                  setReplyingToSpark(spark);\n                  setActiveReply(spark.id);\n                },\n                children: [\"\\uD83E\\uDE9E Reflect \", reflects.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-blue-500\",\n                  children: [\"(\", reflects.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), reflects.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 space-y-3 border-t pt-3 border-dashed\",\n              children: reflects.map((mem, i) => {\n                var _mem$email, _mem$location;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${mem.name}`,\n                    alt: mem.name,\n                    className: \"w-7 h-7 rounded-full border\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-700\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-medium\",\n                      children: mem.name || ((_mem$email = mem.email) === null || _mem$email === void 0 ? void 0 : _mem$email.split(\"@\")[0])\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"italic text-gray-600 line-clamp-2\",\n                      children: [\"\\u201C\", mem.journal.slice(0, 120), \"...\\u201D\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-gray-400 text-[10px]\",\n                      children: (_mem$location = mem.location) === null || _mem$location === void 0 ? void 0 : _mem$location.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this)]\n          }, spark.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), activeReply && replyingToSpark && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full max-w-3xl max-h-[90vh] overflow-y-auto rounded-xl bg-white p-6 shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setActiveReply(null);\n            setReplyingToSpark(null);\n          },\n          className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 text-center mb-3\",\n          children: \"Reflect on this Spark \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MemoryForm, {\n          onAddMemory: mem => handleReplySubmit(mem, replyingToSpark.id),\n          replyingTo: replyingToSpark.id,\n          isInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MemorySparks, \"16aWXh14yukbui0YirmjEdvBYCs=\", false, function () {\n  return [useNavigate];\n});\n_c = MemorySparks;\nexport default MemorySparks;\nvar _c;\n$RefreshReg$(_c, \"MemorySparks\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","API","GlobalHeader","MemoryForm","PostSparkForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MemorySparks","_s","currentUser","JSON","parse","localStorage","getItem","navigate","sparks","setSparks","replyMap","setReplyMap","reflectsMap","setReflectsMap","loading","setLoading","activeReply","setActiveReply","replyingToSpark","setReplyingToSpark","showModal","setShowModal","fetchAll","res","get","fetched","Array","isArray","data","replyData","reflectData","spark","replyRes","id","replies","reflectRes","reflects","err","console","error","handlePostSpark","post","newSpark","prev","handleReplySubmit","newReply","sparkId","handleLove","loved","map","s","_s$lovedBy","alreadyLoved","lovedBy","includes","uid","updatedLovedBy","push","filter","loveCount","handleShare","shareCount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","length","_spark$lovedBy","_spark$location","journal","slice","mood","vibe","location","description","time","name","src","alt","mem","i","_mem$email","_mem$location","email","split","onAddMemory","replyingTo","isInline","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\n\nconst MemorySparks = () => {\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  const [sparks, setSparks] = useState([]);\n  const [replyMap, setReplyMap] = useState({});\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const res = await API.get(\"/sparks\");\n        const fetched = Array.isArray(res.data) ? res.data : res.data.sparks || [];\n        setSparks(fetched);\n\n        const replyData = {};\n        const reflectData = {};\n\n        for (const spark of fetched) {\n          const replyRes = await API.get(`/memories/replies/${spark.id}`);\n          replyData[spark.id] = replyRes.data.replies || [];\n\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          reflectData[spark.id] = reflectRes.data.reflects || [];\n        }\n\n        setReplyMap(replyData);\n        setReflectsMap(reflectData);\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n\n  const handlePostSpark = async (data) => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n\n      setSparks((prev) => [newSpark, ...prev]);\n      setReflectsMap((prev) => ({\n        ...prev,\n        [newSpark.id]: [],\n      }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReplyMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setReflectsMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n\n  const handleLove = async (sparkId) => {\n    try {\n      const res = await API.post(\"/sparks/love\", { sparkId });\n      const { loved } = res.data;\n      setSparks((prev) =>\n        prev.map((s) => {\n          if (s.id !== sparkId) return s;\n          const alreadyLoved = s.lovedBy?.includes(currentUser.uid);\n          let updatedLovedBy = [...(s.lovedBy || [])];\n          if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n          if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter((uid) => uid !== currentUser.uid);\n          return {\n            ...s,\n            lovedBy: updatedLovedBy,\n            loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1,\n          };\n        })\n      );\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n\n  const handleShare = async (sparkId) => {\n    try {\n      await API.post(\"/sparks/share\", { sparkId });\n      setSparks((prev) =>\n        prev.map((s) =>\n          s.id === sparkId ? { ...s, shareCount: (s.shareCount || 0) + 1 } : s\n        )\n      );\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n\n  return (\n    <>\n      <GlobalHeader />\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <div className=\"flex justify-end mb-4\">\n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\"\n          >\n            ✨ Leave a Spark\n          </button>\n        </div>\n\n        {showModal && (\n          <div className=\"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\">\n            <div className=\"relative w-full max-w-md rounded-xl bg-white p-6\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n              >\n                &times;\n              </button>\n              <PostSparkForm\n                onSubmit={(spark) => {\n                  handlePostSpark(spark);\n                  setShowModal(false);\n                }}\n              />\n            </div>\n          </div>\n        )}\n\n        {loading ? (\n          <p className=\"text-center text-gray-500\">Loading sparks...</p>\n        ) : sparks.length === 0 ? (\n          <p className=\"text-center text-gray-500\">No sparks yet</p>\n        ) : (\n          <div className=\"grid sm:grid-cols-2 md:grid-cols-3 gap-4\">\n            {sparks.map((spark) => {\n              const loved = spark.lovedBy?.includes(currentUser.uid);\n              const reflects = reflectsMap[spark.id] || [];\n\n              return (\n                <div key={spark.id} className=\"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\">\n                  <p className=\"text-sm text-gray-700 italic mb-2\">\n                    “{spark.journal.slice(0, 120)}{spark.journal.length > 120 ? \"...\" : \"\"}”\n                  </p>\n\n                  <div className=\"flex flex-wrap gap-2 mb-2\">\n                    <span className=\"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-semibold\">\n                      🧠 {spark.mood}\n                    </span>\n                    <span className=\"bg-pink-100 text-pink-800 px-3 py-1 rounded-full text-xs font-semibold\">\n                      🎨 {spark.vibe}\n                    </span>\n                  </div>\n\n                  <p className=\"text-xs text-gray-500 mb-2\">\n                    {spark?.location?.description || \"Unknown\"} • {spark.time}\n                  </p>\n\n                  <div\n                    className=\"flex items-center gap-2 mt-1 cursor-pointer\"\n                    onClick={() => navigate(`/profile/${spark.name}`)}\n                  >\n                    <img\n                      src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`}\n                      alt={spark.name}\n                      className=\"w-6 h-6 rounded-full border\"\n                    />\n                    <span className=\"text-xs text-gray-700 font-medium\">{spark.name}</span>\n                  </div>\n\n                  {/* Buttons */}\n                  <div className=\"flex justify-between mt-4 border-t border-gray-200 pt-2 text-xs font-medium\">\n                    <button\n                      className={`flex-1 py-2 transition flex items-center justify-center gap-1 ${\n                        loved ? \"text-red-600 font-bold\" : \"\"\n                      }`}\n                      onClick={() => handleLove(spark.id)}\n                    >\n                      ❤️ Love {spark.loveCount > 0 && <span className=\"text-gray-500\">({spark.loveCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => handleShare(spark.id)}\n                    >\n                      🔁 Share {spark.shareCount > 0 && <span className=\"text-gray-500\">({spark.shareCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition font-semibold flex items-center justify-center gap-1\"\n                      onClick={() => {\n                        setReplyingToSpark(spark);\n                        setActiveReply(spark.id);\n                      }}\n                    >\n                      🪞 Reflect {reflects.length > 0 && <span className=\"text-blue-500\">({reflects.length})</span>}\n                    </button>\n                  </div>\n\n                  {/* Reflects */}\n                  {reflects.length > 0 && (\n                    <div className=\"mt-3 space-y-3 border-t pt-3 border-dashed\">\n                      {reflects.map((mem, i) => (\n                        <div key={i} className=\"flex items-start gap-2\">\n                          <img\n                            src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${mem.name}`}\n                            alt={mem.name}\n                            className=\"w-7 h-7 rounded-full border\"\n                          />\n                          <div className=\"text-xs text-gray-700\">\n                            <p className=\"font-medium\">{mem.name || mem.email?.split(\"@\")[0]}</p>\n                            <p className=\"italic text-gray-600 line-clamp-2\">“{mem.journal.slice(0, 120)}...”</p>\n                            <span className=\"text-gray-400 text-[10px]\">{mem.location?.description}</span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {/* Memory Form Modal */}\n      {activeReply && replyingToSpark && (\n        <div className=\"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\">\n          <div className=\"relative w-full max-w-3xl max-h-[90vh] overflow-y-auto rounded-xl bg-white p-6 shadow-xl\">\n            <button\n              onClick={() => {\n                setActiveReply(null);\n                setReplyingToSpark(null);\n              }}\n              className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n            >\n              &times;\n            </button>\n            <h2 className=\"text-lg font-semibold text-gray-800 text-center mb-3\">\n              Reflect on this Spark ✨\n            </h2>\n            <MemoryForm\n              onAddMemory={(mem) => handleReplySubmit(mem, replyingToSpark.id)}\n              replyingTo={replyingToSpark.id}\n              isInline\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MemorySparks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}