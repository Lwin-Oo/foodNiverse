{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MOOD_OPTIONS = [\"open\", \"nostalgic\", \"excited\", \"cozy\", \"peaceful\"];\nconst VIBE_OPTIONS = [\"friendly\", \"spicy\", \"warm\", \"simple\", \"comforting\"];\nconst OCCASION_OPTIONS = [\"hangout\", \"date\", \"family dinner\", \"birthday\", \"exploration\"];\nconst MemorySparks = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const [sparks, setSparks] = useState([]);\n  const [replyMap, setReplyMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [newSpark, setNewSpark] = useState({\n    journal: \"\",\n    mood: \"\",\n    vibe: \"\",\n    occasion: \"\"\n  });\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const {\n    ready,\n    value,\n    setValue,\n    suggestions: {\n      status,\n      data\n    },\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    debounce: 300\n  });\n  useEffect(() => {\n    const fetchSparks = async () => {\n      try {\n        const res = await API.get(\"/sparks\");\n        const fetched = Array.isArray(res.data) ? res.data : res.data.sparks || [];\n        setSparks(fetched);\n        const replyData = {};\n        for (const spark of fetched) {\n          const threadRes = await API.get(`/memories/replies/${spark.id}`);\n          replyData[spark.id] = threadRes.data.replies || [];\n        }\n        setReplyMap(replyData);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch sparks:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSparks();\n  }, []);\n  const handlePostSpark = async () => {\n    const {\n      journal,\n      mood,\n      vibe,\n      occasion\n    } = newSpark;\n    if (!journal || !mood || !vibe || !occasion || !selectedPlace) return;\n    try {\n      const res = await API.post(\"/sparks\", {\n        ...newSpark,\n        location: {\n          description: selectedPlace.description,\n          lat: selectedPlace.lat,\n          lng: selectedPlace.lng\n        },\n        time: \"anytime\",\n        image: \"\"\n      });\n      setSparks(prev => [res.data.spark, ...prev]);\n      setNewSpark({\n        journal: \"\",\n        mood: \"\",\n        vibe: \"\",\n        occasion: \"\"\n      });\n      setValue(\"\");\n      setSelectedPlace(null);\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReplyMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setActiveReply(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800 mb-4 text-center\",\n        children: \"\\u2728 Memory Sparks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/90 border border-blue-100 p-4 rounded-xl shadow mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"What's on your mind? Planning something fun?\",\n          value: newSpark.journal,\n          onChange: e => setNewSpark({\n            ...newSpark,\n            journal: e.target.value\n          }),\n          rows: 2,\n          className: \"w-full border border-gray-300 rounded-md p-2 text-sm resize-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 md:grid-cols-4 gap-2 mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: newSpark.mood,\n            onChange: e => setNewSpark({\n              ...newSpark,\n              mood: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), MOOD_OPTIONS.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: m,\n              children: m\n            }, m, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newSpark.vibe,\n            onChange: e => setNewSpark({\n              ...newSpark,\n              vibe: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Vibe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), VIBE_OPTIONS.map(v => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: v,\n              children: v\n            }, v, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newSpark.occasion,\n            onChange: e => setNewSpark({\n              ...newSpark,\n              occasion: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Occasion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), OCCASION_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: o,\n              children: o\n            }, o, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search a place\",\n              value: value,\n              onChange: e => {\n                setValue(e.target.value);\n                setSelectedPlace(null);\n              },\n              disabled: !ready,\n              className: \"p-2 border border-gray-300 rounded text-sm w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), status === \"OK\" && data.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"absolute z-10 bg-white border border-gray-200 rounded shadow max-h-40 overflow-y-auto mt-1 text-sm\",\n              children: data.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: async () => {\n                  const description = suggestion.description;\n                  setValue(description, false);\n                  clearSuggestions();\n                  try {\n                    const results = await getGeocode({\n                      address: description\n                    });\n                    const {\n                      lat,\n                      lng\n                    } = await getLatLng(results[0]);\n                    setSelectedPlace({\n                      description,\n                      lat,\n                      lng\n                    });\n                  } catch (err) {\n                    console.error(\"❌ Location selection error:\", err);\n                  }\n                },\n                className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n                children: suggestion.description\n              }, suggestion.place_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-right\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePostSpark,\n            className: \"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 text-sm\",\n            children: \"\\uD83D\\uDE80 Post Spark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Loading sparks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this) : sparks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No sparks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid sm:grid-cols-2 md:grid-cols-3 gap-4\",\n        children: sparks.map(spark => {\n          var _spark$location;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700 italic mb-2\",\n              children: [\"\\u201C\", spark.journal.slice(0, 120), spark.journal.length > 120 ? \"...\" : \"\", \"\\u201D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-700 font-medium mb-1\",\n              children: [\"Mood: \", spark.mood, \" \\u2022 Vibe: \", spark.vibe]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2\",\n              children: [(spark === null || spark === void 0 ? void 0 : (_spark$location = spark.location) === null || _spark$location === void 0 ? void 0 : _spark$location.description) || \"Unknown\", \" \\u2022 \", spark.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mt-1 cursor-pointer\",\n              onClick: () => navigate(`/profile/${spark.name}`),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`,\n                alt: spark.name,\n                className: \"w-6 h-6 rounded-full border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-700 font-medium\",\n                children: spark.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mt-4 w-full bg-green-500 text-white py-2 rounded-full text-sm hover:bg-green-600\",\n              onClick: () => setActiveReply(spark.id),\n              children: \"Respond\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), activeReply === spark.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: /*#__PURE__*/_jsxDEV(MemoryForm, {\n                onAddMemory: mem => handleReplySubmit(mem, spark.id),\n                replyingTo: spark.id,\n                isInline: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)]\n          }, spark.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MemorySparks, \"o3NhXhAGNIVZ6xaLvyAqJYBPJig=\", false, function () {\n  return [useNavigate, usePlacesAutocomplete];\n});\n_c = MemorySparks;\nexport default MemorySparks;\nvar _c;\n$RefreshReg$(_c, \"MemorySparks\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","usePlacesAutocomplete","getGeocode","getLatLng","API","GlobalHeader","MemoryForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MOOD_OPTIONS","VIBE_OPTIONS","OCCASION_OPTIONS","MemorySparks","_s","currentUser","JSON","parse","localStorage","getItem","navigate","sparks","setSparks","replyMap","setReplyMap","loading","setLoading","activeReply","setActiveReply","newSpark","setNewSpark","journal","mood","vibe","occasion","selectedPlace","setSelectedPlace","ready","value","setValue","suggestions","status","data","clearSuggestions","debounce","fetchSparks","res","get","fetched","Array","isArray","replyData","spark","threadRes","id","replies","err","console","error","handlePostSpark","post","location","description","lat","lng","time","image","prev","handleReplySubmit","newReply","sparkId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","onChange","e","target","rows","map","m","v","o","type","disabled","length","suggestion","onClick","results","address","place_id","_spark$location","slice","name","src","alt","onAddMemory","mem","replyingTo","isInline","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\n\nconst MOOD_OPTIONS = [\"open\", \"nostalgic\", \"excited\", \"cozy\", \"peaceful\"];\nconst VIBE_OPTIONS = [\"friendly\", \"spicy\", \"warm\", \"simple\", \"comforting\"];\nconst OCCASION_OPTIONS = [\"hangout\", \"date\", \"family dinner\", \"birthday\", \"exploration\"];\n\nconst MemorySparks = () => {\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  const [sparks, setSparks] = useState([]);\n  const [replyMap, setReplyMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n\n  const [newSpark, setNewSpark] = useState({\n    journal: \"\",\n    mood: \"\",\n    vibe: \"\",\n    occasion: \"\",\n  });\n\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const {\n    ready,\n    value,\n    setValue,\n    suggestions: { status, data },\n    clearSuggestions,\n  } = usePlacesAutocomplete({ debounce: 300 });\n\n  useEffect(() => {\n    const fetchSparks = async () => {\n      try {\n        const res = await API.get(\"/sparks\");\n        const fetched = Array.isArray(res.data) ? res.data : res.data.sparks || [];\n        setSparks(fetched);\n\n        const replyData = {};\n        for (const spark of fetched) {\n          const threadRes = await API.get(`/memories/replies/${spark.id}`);\n          replyData[spark.id] = threadRes.data.replies || [];\n        }\n        setReplyMap(replyData);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch sparks:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSparks();\n  }, []);\n\n  const handlePostSpark = async () => {\n    const { journal, mood, vibe, occasion } = newSpark;\n    if (!journal || !mood || !vibe || !occasion || !selectedPlace) return;\n\n    try {\n      const res = await API.post(\"/sparks\", {\n        ...newSpark,\n        location: {\n          description: selectedPlace.description,\n          lat: selectedPlace.lat,\n          lng: selectedPlace.lng,\n        },\n        time: \"anytime\",\n        image: \"\",\n      });\n\n      setSparks((prev) => [res.data.spark, ...prev]);\n      setNewSpark({ journal: \"\", mood: \"\", vibe: \"\", occasion: \"\" });\n      setValue(\"\");\n      setSelectedPlace(null);\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n\n  const handleReplySubmit = (newReply, sparkId) => {\n    setReplyMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setActiveReply(null);\n  };\n\n  return (\n    <>\n      <GlobalHeader />\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">✨ Memory Sparks</h1>\n\n        {/* 🔥 Post Spark */}\n        <div className=\"bg-white/90 border border-blue-100 p-4 rounded-xl shadow mb-8\">\n          <textarea\n            placeholder=\"What's on your mind? Planning something fun?\"\n            value={newSpark.journal}\n            onChange={(e) => setNewSpark({ ...newSpark, journal: e.target.value })}\n            rows={2}\n            className=\"w-full border border-gray-300 rounded-md p-2 text-sm resize-none\"\n          />\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 mt-3\">\n            <select\n              value={newSpark.mood}\n              onChange={(e) => setNewSpark({ ...newSpark, mood: e.target.value })}\n              className=\"p-2 border border-gray-300 rounded text-sm\"\n            >\n              <option value=\"\">Mood</option>\n              {MOOD_OPTIONS.map((m) => (\n                <option key={m} value={m}>{m}</option>\n              ))}\n            </select>\n            <select\n              value={newSpark.vibe}\n              onChange={(e) => setNewSpark({ ...newSpark, vibe: e.target.value })}\n              className=\"p-2 border border-gray-300 rounded text-sm\"\n            >\n              <option value=\"\">Vibe</option>\n              {VIBE_OPTIONS.map((v) => (\n                <option key={v} value={v}>{v}</option>\n              ))}\n            </select>\n            <select\n              value={newSpark.occasion}\n              onChange={(e) => setNewSpark({ ...newSpark, occasion: e.target.value })}\n              className=\"p-2 border border-gray-300 rounded text-sm\"\n            >\n              <option value=\"\">Occasion</option>\n              {OCCASION_OPTIONS.map((o) => (\n                <option key={o} value={o}>{o}</option>\n              ))}\n            </select>\n            {/* 🌍 Google Autocomplete */}\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Search a place\"\n                value={value}\n                onChange={(e) => {\n                  setValue(e.target.value);\n                  setSelectedPlace(null);\n                }}\n                disabled={!ready}\n                className=\"p-2 border border-gray-300 rounded text-sm w-full\"\n              />\n              {status === \"OK\" && data.length > 0 && (\n                <ul className=\"absolute z-10 bg-white border border-gray-200 rounded shadow max-h-40 overflow-y-auto mt-1 text-sm\">\n                  {data.map((suggestion) => (\n                    <li\n                      key={suggestion.place_id}\n                      onClick={async () => {\n                        const description = suggestion.description;\n                        setValue(description, false);\n                        clearSuggestions();\n                        try {\n                          const results = await getGeocode({ address: description });\n                          const { lat, lng } = await getLatLng(results[0]);\n                          setSelectedPlace({ description, lat, lng });\n                        } catch (err) {\n                          console.error(\"❌ Location selection error:\", err);\n                        }\n                      }}\n                      className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    >\n                      {suggestion.description}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n\n          <div className=\"mt-4 text-right\">\n            <button\n              onClick={handlePostSpark}\n              className=\"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 text-sm\"\n            >\n              🚀 Post Spark\n            </button>\n          </div>\n        </div>\n\n        {/* ✨ Spark Feed */}\n        {loading ? (\n          <p className=\"text-center text-gray-500\">Loading sparks...</p>\n        ) : sparks.length === 0 ? (\n          <p className=\"text-center text-gray-500\">No sparks yet</p>\n        ) : (\n          <div className=\"grid sm:grid-cols-2 md:grid-cols-3 gap-4\">\n            {sparks.map((spark) => (\n              <div\n                key={spark.id}\n                className=\"bg-white/90 border border-blue-100 rounded-xl p-4 shadow flex flex-col\"\n              >\n                <p className=\"text-sm text-gray-700 italic mb-2\">\n                  “{spark.journal.slice(0, 120)}{spark.journal.length > 120 ? \"...\" : \"\"}”\n                </p>\n\n                <div className=\"text-xs text-blue-700 font-medium mb-1\">\n                  Mood: {spark.mood} • Vibe: {spark.vibe}\n                </div>\n                <p className=\"text-xs text-gray-500 mb-2\">\n                  {spark?.location?.description || \"Unknown\"} • {spark.time}\n                </p>\n\n                <div\n                  className=\"flex items-center gap-2 mt-1 cursor-pointer\"\n                  onClick={() => navigate(`/profile/${spark.name}`)}\n                >\n                  <img\n                    src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${spark.name}`}\n                    alt={spark.name}\n                    className=\"w-6 h-6 rounded-full border\"\n                  />\n                  <span className=\"text-xs text-gray-700 font-medium\">{spark.name}</span>\n                </div>\n\n                <button\n                  className=\"mt-4 w-full bg-green-500 text-white py-2 rounded-full text-sm hover:bg-green-600\"\n                  onClick={() => setActiveReply(spark.id)}\n                >\n                  Respond\n                </button>\n\n                {activeReply === spark.id && (\n                  <div className=\"mt-4\">\n                    <MemoryForm\n                      onAddMemory={(mem) => handleReplySubmit(mem, spark.id)}\n                      replyingTo={spark.id}\n                      isInline\n                    />\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MemorySparks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}