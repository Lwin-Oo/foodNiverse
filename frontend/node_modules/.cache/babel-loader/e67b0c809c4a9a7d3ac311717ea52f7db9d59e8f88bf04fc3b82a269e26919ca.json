{"ast":null,"code":"var _jsxFileName = \"/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport SparkCard from \"../../components/SparkCard/SparkCard\";\nimport ReplyForm from \"../../components/ReplyForm/ReplyForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemorySparks = () => {\n  _s();\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n  const [sparks, setSparks] = useState([]);\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [repliesMap, setRepliesMap] = useState({});\n  const [userMap, setUserMap] = useState({});\n  const [expandedSparkId, setExpandedSparkId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const sparkRes = await API.get(\"/sparks\");\n        const sparksFetched = Array.isArray(sparkRes.data) ? sparkRes.data : sparkRes.data.sparks || [];\n        setSparks(sparksFetched);\n        const reflectData = {};\n        const replyData = {};\n        const uids = new Set();\n        for (const spark of sparksFetched) {\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          const reflects = reflectRes.data.reflects || [];\n          reflectData[spark.id] = reflects;\n          const replyRes = await API.get(`/sparks/${spark.id}/replies`);\n          const replies = replyRes.data.replies || [];\n          replyData[spark.id] = replies;\n          reflects.forEach(mem => {\n            if (mem.userId) uids.add(mem.userId);\n          });\n          replies.forEach(r => {\n            if (r.userId) uids.add(r.userId);\n          });\n        }\n        setReflectsMap(reflectData);\n        setRepliesMap(replyData);\n        const uidArray = Array.from(uids);\n        if (uidArray.length) {\n          const userRes = await API.post(\"/user/uid-map\", {\n            uids: uidArray\n          });\n          setUserMap(userRes.data.users);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n  const handleToggleReflect = sparkId => {\n    setExpandedSparkId(prev => prev === sparkId ? null : sparkId);\n  };\n  const handlePostSpark = async data => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks(prev => [newSpark, ...prev]);\n      setReflectsMap(prev => ({\n        ...prev,\n        [newSpark.id]: []\n      }));\n      setRepliesMap(prev => ({\n        ...prev,\n        [newSpark.id]: []\n      }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n  const handleReplySubmit = (newReply, sparkId) => {\n    setRepliesMap(prev => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])]\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n  const handleLove = async sparkId => {\n    try {\n      const res = await API.post(\"/sparks/love\", {\n        sparkId\n      });\n      const {\n        loved\n      } = res.data;\n      setSparks(prev => prev.map(s => {\n        var _s$lovedBy;\n        if (s.id !== sparkId) return s;\n        const alreadyLoved = (_s$lovedBy = s.lovedBy) === null || _s$lovedBy === void 0 ? void 0 : _s$lovedBy.includes(currentUser.uid);\n        let updatedLovedBy = [...(s.lovedBy || [])];\n        if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n        if (!loved && alreadyLoved) updatedLovedBy = updatedLovedBy.filter(uid => uid !== currentUser.uid);\n        return {\n          ...s,\n          lovedBy: updatedLovedBy,\n          loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1\n        };\n      }));\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n  const handleShare = async sparkId => {\n    try {\n      await API.post(\"/sparks/share\", {\n        sparkId\n      });\n      setSparks(prev => prev.map(s => s.id === sparkId ? {\n        ...s,\n        shareCount: (s.shareCount || 0) + 1\n      } : s));\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          className: \"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\",\n          children: \"\\u2728 Leave a Spark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full max-w-md rounded-xl bg-white p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostSparkForm, {\n            onSubmit: spark => {\n              handlePostSpark(spark);\n              setShowModal(false);\n            },\n            onClose: () => setShowModal(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Loading sparks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : sparks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No sparks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: sparks.map(spark => {\n          var _spark$lovedBy;\n          const sparkId = spark.id;\n          const loved = (_spark$lovedBy = spark.lovedBy) === null || _spark$lovedBy === void 0 ? void 0 : _spark$lovedBy.includes(currentUser.uid);\n          const reflects = reflectsMap[sparkId] || [];\n          const replies = repliesMap[sparkId] || [];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-md mx-auto bg-white shadow-md rounded-xl p-4\",\n            children: [/*#__PURE__*/_jsxDEV(SparkCard, {\n              spark: spark,\n              userMap: userMap,\n              navigate: navigate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between text-xs font-medium pt-2 border-t mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `flex-1 py-2 transition flex items-center justify-center gap-1 ${loved ? \"text-red-600 font-bold\" : \"\"}`,\n                onClick: () => handleLove(sparkId),\n                children: [\"\\u2764\\uFE0F Love \", spark.loveCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.loveCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => handleShare(sparkId),\n                children: [\"\\uD83D\\uDD01 Share \", spark.shareCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500\",\n                  children: [\"(\", spark.shareCount, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => handleToggleReflect(sparkId),\n                children: [\"\\uD83E\\uDE9E Reflect \", reflects.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-blue-500\",\n                  children: [\"(\", reflects.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\",\n                onClick: () => {\n                  setActiveReply(sparkId);\n                  setReplyingToSpark(spark);\n                },\n                children: [\"\\uD83D\\uDCAC Reply \", replies.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-blue-500\",\n                  children: [\"(\", replies.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), expandedSparkId === sparkId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 space-y-3 border-t pt-3 border-dashed\",\n              children: reflects.map((mem, i) => {\n                var _mem$email, _mem$location;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://api.dicebear.com/7.x/thumbs/svg?seed=${mem.name}`,\n                    alt: mem.name,\n                    className: \"w-7 h-7 rounded-full border\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-700 flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"font-semibold\",\n                        children: userMap[mem.userId] || mem.name || ((_mem$email = mem.email) === null || _mem$email === void 0 ? void 0 : _mem$email.split(\"@\")[0])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 31\n                      }, this), mem.meaning && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-blue-100 text-blue-700 px-2 py-0.5 rounded-full text-[10px]\",\n                        children: [\"Meaning: \", mem.meaning, \"/5\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 29\n                    }, this), mem.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: mem.image,\n                      alt: \"Memory\",\n                      className: \"my-2 w-full h-32 object-cover rounded-md shadow\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"italic text-gray-600\",\n                      children: [\"\\u201C\", mem.journal.slice(0, 200), \"...\\u201D\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-[10px] text-gray-400 mt-1\",\n                      children: (_mem$location = mem.location) === null || _mem$location === void 0 ? void 0 : _mem$location.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this)]\n          }, sparkId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), activeReply && replyingToSpark && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full max-w-md rounded-xl bg-white p-6 shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setActiveReply(null);\n            setReplyingToSpark(null);\n          },\n          className: \"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 text-center mb-3\",\n          children: \"Leave a Reply \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ReplyForm, {\n          replyingTo: replyingToSpark.id,\n          onAddReply: (reply, sparkId) => {\n            setRepliesMap(prev => ({\n              ...prev,\n              [sparkId]: [reply, ...(prev[sparkId] || [])]\n            }));\n            setActiveReply(null);\n            setReplyingToSpark(null);\n          },\n          onClose: () => {\n            setActiveReply(null);\n            setReplyingToSpark(null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_s(MemorySparks, \"NKemql6CiAaZB7QUW/spA0QMuW0=\", false, function () {\n  return [useNavigate];\n});\n_c = MemorySparks;\nexport default MemorySparks;\nvar _c;\n$RefreshReg$(_c, \"MemorySparks\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","API","GlobalHeader","MemoryForm","PostSparkForm","SparkCard","ReplyForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MemorySparks","_s","currentUser","JSON","parse","localStorage","getItem","navigate","sparks","setSparks","reflectsMap","setReflectsMap","repliesMap","setRepliesMap","userMap","setUserMap","expandedSparkId","setExpandedSparkId","loading","setLoading","activeReply","setActiveReply","replyingToSpark","setReplyingToSpark","showModal","setShowModal","fetchAll","sparkRes","get","sparksFetched","Array","isArray","data","reflectData","replyData","uids","Set","spark","reflectRes","id","reflects","replyRes","replies","forEach","mem","userId","add","r","uidArray","from","length","userRes","post","users","err","console","error","handleToggleReflect","sparkId","prev","handlePostSpark","res","newSpark","handleReplySubmit","newReply","handleLove","loved","map","s","_s$lovedBy","alreadyLoved","lovedBy","includes","uid","updatedLovedBy","push","filter","loveCount","handleShare","shareCount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","onClose","_spark$lovedBy","i","_mem$email","_mem$location","src","name","alt","email","split","meaning","image","journal","slice","location","description","replyingTo","onAddReply","reply","_c","$RefreshReg$"],"sources":["/Users/lwi/Foodniverse3.0/frontend/src/pages/MemorySparks/MemorySparks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport GlobalHeader from \"../../components/GlobalHeader/GlobalHeader\";\nimport MemoryForm from \"../../components/MemoryForm/MemoryForm\";\nimport PostSparkForm from \"../../components/PostSparkForm/PostSparkForm\";\nimport SparkCard from \"../../components/SparkCard/SparkCard\";\nimport ReplyForm from \"../../components/ReplyForm/ReplyForm\";\n\nconst MemorySparks = () => {\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  const [sparks, setSparks] = useState([]);\n  const [reflectsMap, setReflectsMap] = useState({});\n  const [repliesMap, setRepliesMap] = useState({});\n  const [userMap, setUserMap] = useState({});\n  const [expandedSparkId, setExpandedSparkId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeReply, setActiveReply] = useState(null);\n  const [replyingToSpark, setReplyingToSpark] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const sparkRes = await API.get(\"/sparks\");\n        const sparksFetched = Array.isArray(sparkRes.data)\n          ? sparkRes.data\n          : sparkRes.data.sparks || [];\n        setSparks(sparksFetched);\n\n        const reflectData = {};\n        const replyData = {};\n        const uids = new Set();\n\n        for (const spark of sparksFetched) {\n          const reflectRes = await API.get(`/sparks/${spark.id}/reflects`);\n          const reflects = reflectRes.data.reflects || [];\n          reflectData[spark.id] = reflects;\n\n          const replyRes = await API.get(`/sparks/${spark.id}/replies`);\n          const replies = replyRes.data.replies || [];\n          replyData[spark.id] = replies;\n\n          reflects.forEach((mem) => { if (mem.userId) uids.add(mem.userId); });\n          replies.forEach((r) => { if (r.userId) uids.add(r.userId); });\n        }\n\n        setReflectsMap(reflectData);\n        setRepliesMap(replyData);\n\n        const uidArray = Array.from(uids);\n        if (uidArray.length) {\n          const userRes = await API.post(\"/user/uid-map\", { uids: uidArray });\n          setUserMap(userRes.data.users);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAll();\n  }, []);\n\n  const handleToggleReflect = (sparkId) => {\n    setExpandedSparkId((prev) => (prev === sparkId ? null : sparkId));\n  };\n\n  const handlePostSpark = async (data) => {\n    try {\n      const res = await API.post(\"/sparks\", data);\n      const newSpark = res.data.spark;\n      setSparks((prev) => [newSpark, ...prev]);\n      setReflectsMap((prev) => ({ ...prev, [newSpark.id]: [] }));\n      setRepliesMap((prev) => ({ ...prev, [newSpark.id]: [] }));\n    } catch (err) {\n      console.error(\"❌ Failed to post spark:\", err);\n    }\n  };\n\n  const handleReplySubmit = (newReply, sparkId) => {\n    setRepliesMap((prev) => ({\n      ...prev,\n      [sparkId]: [newReply, ...(prev[sparkId] || [])],\n    }));\n    setActiveReply(null);\n    setReplyingToSpark(null);\n  };\n\n  const handleLove = async (sparkId) => {\n    try {\n      const res = await API.post(\"/sparks/love\", { sparkId });\n      const { loved } = res.data;\n      setSparks((prev) =>\n        prev.map((s) => {\n          if (s.id !== sparkId) return s;\n          const alreadyLoved = s.lovedBy?.includes(currentUser.uid);\n          let updatedLovedBy = [...(s.lovedBy || [])];\n          if (loved && !alreadyLoved) updatedLovedBy.push(currentUser.uid);\n          if (!loved && alreadyLoved)\n            updatedLovedBy = updatedLovedBy.filter((uid) => uid !== currentUser.uid);\n          return {\n            ...s,\n            lovedBy: updatedLovedBy,\n            loveCount: loved ? (s.loveCount || 0) + 1 : (s.loveCount || 1) - 1,\n          };\n        })\n      );\n    } catch (err) {\n      console.error(\"❌ Love error:\", err);\n    }\n  };\n\n  const handleShare = async (sparkId) => {\n    try {\n      await API.post(\"/sparks/share\", { sparkId });\n      setSparks((prev) =>\n        prev.map((s) => (s.id === sparkId ? { ...s, shareCount: (s.shareCount || 0) + 1 } : s))\n      );\n    } catch (err) {\n      console.error(\"❌ Share error:\", err);\n    }\n  };\n\n  return (\n    <>\n      <GlobalHeader />\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <div className=\"flex justify-end mb-4\">\n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-blue-600 text-white px-5 py-2 rounded-full text-sm shadow hover:bg-blue-700 transition\"\n          >\n            ✨ Leave a Spark\n          </button>\n        </div>\n\n        {showModal && (\n          <div className=\"fixed inset-0 z-50 bg-black/40 flex items-center justify-center p-4\">\n            <div className=\"relative w-full max-w-md rounded-xl bg-white p-6\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n              >\n                &times;\n              </button>\n              <PostSparkForm\n                onSubmit={(spark) => {\n                  handlePostSpark(spark);\n                  setShowModal(false);\n                }}\n                onClose={() => setShowModal(false)}\n              />\n            </div>\n          </div>\n        )}\n\n        {loading ? (\n          <p className=\"text-center text-gray-500\">Loading sparks...</p>\n        ) : sparks.length === 0 ? (\n          <p className=\"text-center text-gray-500\">No sparks yet</p>\n        ) : (\n          <div className=\"space-y-6\">\n            {sparks.map((spark) => {\n              const sparkId = spark.id;\n              const loved = spark.lovedBy?.includes(currentUser.uid);\n              const reflects = reflectsMap[sparkId] || [];\n              const replies = repliesMap[sparkId] || [];\n\n              return (\n                <div key={sparkId} className=\"max-w-md mx-auto bg-white shadow-md rounded-xl p-4\">\n                  <SparkCard spark={spark} userMap={userMap} navigate={navigate} />\n\n                  <div className=\"flex justify-between text-xs font-medium pt-2 border-t mt-2\">\n                    <button\n                      className={`flex-1 py-2 transition flex items-center justify-center gap-1 ${\n                        loved ? \"text-red-600 font-bold\" : \"\"\n                      }`}\n                      onClick={() => handleLove(sparkId)}\n                    >\n                      ❤️ Love {spark.loveCount > 0 && <span className=\"text-gray-500\">({spark.loveCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => handleShare(sparkId)}\n                    >\n                      🔁 Share {spark.shareCount > 0 && <span className=\"text-gray-500\">({spark.shareCount})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => handleToggleReflect(sparkId)}\n                    >\n                      🪞 Reflect {reflects.length > 0 && <span className=\"text-blue-500\">({reflects.length})</span>}\n                    </button>\n                    <button\n                      className=\"flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-1\"\n                      onClick={() => {\n                        setActiveReply(sparkId);\n                        setReplyingToSpark(spark);\n                      }}\n                    >\n                      💬 Reply {replies.length > 0 && <span className=\"text-blue-500\">({replies.length})</span>}\n                    </button>\n                  </div>\n\n                  {expandedSparkId === sparkId && (\n                    <div className=\"mt-3 space-y-3 border-t pt-3 border-dashed\">\n                      {reflects.map((mem, i) => (\n                        <div key={i} className=\"flex items-start gap-2\">\n                          <img\n                            src={`https://api.dicebear.com/7.x/thumbs/svg?seed=${mem.name}`}\n                            alt={mem.name}\n                            className=\"w-7 h-7 rounded-full border\"\n                          />\n                          <div className=\"text-xs text-gray-700 flex-1\">\n                            <div className=\"flex justify-between\">\n                              <p className=\"font-semibold\">\n                                {userMap[mem.userId] || mem.name || mem.email?.split(\"@\")[0]}\n                              </p>\n                              {mem.meaning && (\n                                <span className=\"bg-blue-100 text-blue-700 px-2 py-0.5 rounded-full text-[10px]\">\n                                  Meaning: {mem.meaning}/5\n                                </span>\n                              )}\n                            </div>\n                            {mem.image && (\n                              <img\n                                src={mem.image}\n                                alt=\"Memory\"\n                                className=\"my-2 w-full h-32 object-cover rounded-md shadow\"\n                              />\n                            )}\n                            <p className=\"italic text-gray-600\">“{mem.journal.slice(0, 200)}...”</p>\n                            <p className=\"text-[10px] text-gray-400 mt-1\">{mem.location?.description}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {activeReply && replyingToSpark && (\n  <div className=\"fixed inset-0 z-50 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4\">\n    <div className=\"relative w-full max-w-md rounded-xl bg-white p-6 shadow-xl\">\n      <button\n        onClick={() => {\n          setActiveReply(null);\n          setReplyingToSpark(null);\n        }}\n        className=\"absolute top-2 right-3 text-gray-400 hover:text-red-500 text-lg\"\n      >\n        &times;\n      </button>\n      <h2 className=\"text-lg font-semibold text-gray-800 text-center mb-3\">\n        Leave a Reply ✨\n      </h2>\n      <ReplyForm\n        replyingTo={replyingToSpark.id}\n        onAddReply={(reply, sparkId) => {\n          setRepliesMap((prev) => ({\n            ...prev,\n            [sparkId]: [reply, ...(prev[sparkId] || [])],\n          }));\n          setActiveReply(null);\n          setReplyingToSpark(null);\n        }}\n        onClose={() => {\n          setActiveReply(null);\n          setReplyingToSpark(null);\n        }}\n      />\n    </div>\n  </div>\n)}\n\n    </>\n  );\n};\n\nexport default MemorySparks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,YAAY,MAAM,4CAA4C;AACrE,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,aAAa,MAAM,8CAA8C;AACxE,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,SAAS,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC5D,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC4B,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMuC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMrC,GAAG,CAACsC,GAAG,CAAC,SAAS,CAAC;QACzC,MAAMC,aAAa,GAAGC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAAC,GAC9CL,QAAQ,CAACK,IAAI,GACbL,QAAQ,CAACK,IAAI,CAACxB,MAAM,IAAI,EAAE;QAC9BC,SAAS,CAACoB,aAAa,CAAC;QAExB,MAAMI,WAAW,GAAG,CAAC,CAAC;QACtB,MAAMC,SAAS,GAAG,CAAC,CAAC;QACpB,MAAMC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;QAEtB,KAAK,MAAMC,KAAK,IAAIR,aAAa,EAAE;UACjC,MAAMS,UAAU,GAAG,MAAMhD,GAAG,CAACsC,GAAG,CAAC,WAAWS,KAAK,CAACE,EAAE,WAAW,CAAC;UAChE,MAAMC,QAAQ,GAAGF,UAAU,CAACN,IAAI,CAACQ,QAAQ,IAAI,EAAE;UAC/CP,WAAW,CAACI,KAAK,CAACE,EAAE,CAAC,GAAGC,QAAQ;UAEhC,MAAMC,QAAQ,GAAG,MAAMnD,GAAG,CAACsC,GAAG,CAAC,WAAWS,KAAK,CAACE,EAAE,UAAU,CAAC;UAC7D,MAAMG,OAAO,GAAGD,QAAQ,CAACT,IAAI,CAACU,OAAO,IAAI,EAAE;UAC3CR,SAAS,CAACG,KAAK,CAACE,EAAE,CAAC,GAAGG,OAAO;UAE7BF,QAAQ,CAACG,OAAO,CAAEC,GAAG,IAAK;YAAE,IAAIA,GAAG,CAACC,MAAM,EAAEV,IAAI,CAACW,GAAG,CAACF,GAAG,CAACC,MAAM,CAAC;UAAE,CAAC,CAAC;UACpEH,OAAO,CAACC,OAAO,CAAEI,CAAC,IAAK;YAAE,IAAIA,CAAC,CAACF,MAAM,EAAEV,IAAI,CAACW,GAAG,CAACC,CAAC,CAACF,MAAM,CAAC;UAAE,CAAC,CAAC;QAC/D;QAEAlC,cAAc,CAACsB,WAAW,CAAC;QAC3BpB,aAAa,CAACqB,SAAS,CAAC;QAExB,MAAMc,QAAQ,GAAGlB,KAAK,CAACmB,IAAI,CAACd,IAAI,CAAC;QACjC,IAAIa,QAAQ,CAACE,MAAM,EAAE;UACnB,MAAMC,OAAO,GAAG,MAAM7D,GAAG,CAAC8D,IAAI,CAAC,eAAe,EAAE;YAAEjB,IAAI,EAAEa;UAAS,CAAC,CAAC;UACnEjC,UAAU,CAACoC,OAAO,CAACnB,IAAI,CAACqB,KAAK,CAAC;QAChC;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;MACtC,CAAC,SAAS;QACRnC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDO,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM+B,mBAAmB,GAAIC,OAAO,IAAK;IACvCzC,kBAAkB,CAAE0C,IAAI,IAAMA,IAAI,KAAKD,OAAO,GAAG,IAAI,GAAGA,OAAQ,CAAC;EACnE,CAAC;EAED,MAAME,eAAe,GAAG,MAAO5B,IAAI,IAAK;IACtC,IAAI;MACF,MAAM6B,GAAG,GAAG,MAAMvE,GAAG,CAAC8D,IAAI,CAAC,SAAS,EAAEpB,IAAI,CAAC;MAC3C,MAAM8B,QAAQ,GAAGD,GAAG,CAAC7B,IAAI,CAACK,KAAK;MAC/B5B,SAAS,CAAEkD,IAAI,IAAK,CAACG,QAAQ,EAAE,GAAGH,IAAI,CAAC,CAAC;MACxChD,cAAc,CAAEgD,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACG,QAAQ,CAACvB,EAAE,GAAG;MAAG,CAAC,CAAC,CAAC;MAC1D1B,aAAa,CAAE8C,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACG,QAAQ,CAACvB,EAAE,GAAG;MAAG,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAED,MAAMS,iBAAiB,GAAGA,CAACC,QAAQ,EAAEN,OAAO,KAAK;IAC/C7C,aAAa,CAAE8C,IAAI,KAAM;MACvB,GAAGA,IAAI;MACP,CAACD,OAAO,GAAG,CAACM,QAAQ,EAAE,IAAIL,IAAI,CAACD,OAAO,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;IACHrC,cAAc,CAAC,IAAI,CAAC;IACpBE,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAM0C,UAAU,GAAG,MAAOP,OAAO,IAAK;IACpC,IAAI;MACF,MAAMG,GAAG,GAAG,MAAMvE,GAAG,CAAC8D,IAAI,CAAC,cAAc,EAAE;QAAEM;MAAQ,CAAC,CAAC;MACvD,MAAM;QAAEQ;MAAM,CAAC,GAAGL,GAAG,CAAC7B,IAAI;MAC1BvB,SAAS,CAAEkD,IAAI,IACbA,IAAI,CAACQ,GAAG,CAAEC,CAAC,IAAK;QAAA,IAAAC,UAAA;QACd,IAAID,CAAC,CAAC7B,EAAE,KAAKmB,OAAO,EAAE,OAAOU,CAAC;QAC9B,MAAME,YAAY,IAAAD,UAAA,GAAGD,CAAC,CAACG,OAAO,cAAAF,UAAA,uBAATA,UAAA,CAAWG,QAAQ,CAACtE,WAAW,CAACuE,GAAG,CAAC;QACzD,IAAIC,cAAc,GAAG,CAAC,IAAIN,CAAC,CAACG,OAAO,IAAI,EAAE,CAAC,CAAC;QAC3C,IAAIL,KAAK,IAAI,CAACI,YAAY,EAAEI,cAAc,CAACC,IAAI,CAACzE,WAAW,CAACuE,GAAG,CAAC;QAChE,IAAI,CAACP,KAAK,IAAII,YAAY,EACxBI,cAAc,GAAGA,cAAc,CAACE,MAAM,CAAEH,GAAG,IAAKA,GAAG,KAAKvE,WAAW,CAACuE,GAAG,CAAC;QAC1E,OAAO;UACL,GAAGL,CAAC;UACJG,OAAO,EAAEG,cAAc;UACvBG,SAAS,EAAEX,KAAK,GAAG,CAACE,CAAC,CAACS,SAAS,IAAI,CAAC,IAAI,CAAC,GAAG,CAACT,CAAC,CAACS,SAAS,IAAI,CAAC,IAAI;QACnE,CAAC;MACH,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOvB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;IACrC;EACF,CAAC;EAED,MAAMwB,WAAW,GAAG,MAAOpB,OAAO,IAAK;IACrC,IAAI;MACF,MAAMpE,GAAG,CAAC8D,IAAI,CAAC,eAAe,EAAE;QAAEM;MAAQ,CAAC,CAAC;MAC5CjD,SAAS,CAAEkD,IAAI,IACbA,IAAI,CAACQ,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAAC7B,EAAE,KAAKmB,OAAO,GAAG;QAAE,GAAGU,CAAC;QAAEW,UAAU,EAAE,CAACX,CAAC,CAACW,UAAU,IAAI,CAAC,IAAI;MAAE,CAAC,GAAGX,CAAE,CACxF,CAAC;IACH,CAAC,CAAC,OAAOd,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;IACtC;EACF,CAAC;EAED,oBACEzD,OAAA,CAAAE,SAAA;IAAAiF,QAAA,gBACEnF,OAAA,CAACN,YAAY;MAAA0F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBvF,OAAA;MAAKwF,SAAS,EAAC,6BAA6B;MAAAL,QAAA,gBAC1CnF,OAAA;QAAKwF,SAAS,EAAC,uBAAuB;QAAAL,QAAA,eACpCnF,OAAA;UACEyF,OAAO,EAAEA,CAAA,KAAM7D,YAAY,CAAC,IAAI,CAAE;UAClC4D,SAAS,EAAC,2FAA2F;UAAAL,QAAA,EACtG;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEL5D,SAAS,iBACR3B,OAAA;QAAKwF,SAAS,EAAC,qEAAqE;QAAAL,QAAA,eAClFnF,OAAA;UAAKwF,SAAS,EAAC,kDAAkD;UAAAL,QAAA,gBAC/DnF,OAAA;YACEyF,OAAO,EAAEA,CAAA,KAAM7D,YAAY,CAAC,KAAK,CAAE;YACnC4D,SAAS,EAAC,iEAAiE;YAAAL,QAAA,EAC5E;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTvF,OAAA,CAACJ,aAAa;YACZ8F,QAAQ,EAAGlD,KAAK,IAAK;cACnBuB,eAAe,CAACvB,KAAK,CAAC;cACtBZ,YAAY,CAAC,KAAK,CAAC;YACrB,CAAE;YACF+D,OAAO,EAAEA,CAAA,KAAM/D,YAAY,CAAC,KAAK;UAAE;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEAlE,OAAO,gBACNrB,OAAA;QAAGwF,SAAS,EAAC,2BAA2B;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAC5D5E,MAAM,CAAC0C,MAAM,KAAK,CAAC,gBACrBrD,OAAA;QAAGwF,SAAS,EAAC,2BAA2B;QAAAL,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE1DvF,OAAA;QAAKwF,SAAS,EAAC,WAAW;QAAAL,QAAA,EACvBxE,MAAM,CAAC2D,GAAG,CAAE9B,KAAK,IAAK;UAAA,IAAAoD,cAAA;UACrB,MAAM/B,OAAO,GAAGrB,KAAK,CAACE,EAAE;UACxB,MAAM2B,KAAK,IAAAuB,cAAA,GAAGpD,KAAK,CAACkC,OAAO,cAAAkB,cAAA,uBAAbA,cAAA,CAAejB,QAAQ,CAACtE,WAAW,CAACuE,GAAG,CAAC;UACtD,MAAMjC,QAAQ,GAAG9B,WAAW,CAACgD,OAAO,CAAC,IAAI,EAAE;UAC3C,MAAMhB,OAAO,GAAG9B,UAAU,CAAC8C,OAAO,CAAC,IAAI,EAAE;UAEzC,oBACE7D,OAAA;YAAmBwF,SAAS,EAAC,oDAAoD;YAAAL,QAAA,gBAC/EnF,OAAA,CAACH,SAAS;cAAC2C,KAAK,EAAEA,KAAM;cAACvB,OAAO,EAAEA,OAAQ;cAACP,QAAQ,EAAEA;YAAS;cAAA0E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAEjEvF,OAAA;cAAKwF,SAAS,EAAC,6DAA6D;cAAAL,QAAA,gBAC1EnF,OAAA;gBACEwF,SAAS,EAAE,iEACTnB,KAAK,GAAG,wBAAwB,GAAG,EAAE,EACpC;gBACHoB,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACP,OAAO,CAAE;gBAAAsB,QAAA,GACpC,oBACS,EAAC3C,KAAK,CAACwC,SAAS,GAAG,CAAC,iBAAIhF,OAAA;kBAAMwF,SAAS,EAAC,eAAe;kBAAAL,QAAA,GAAC,GAAC,EAAC3C,KAAK,CAACwC,SAAS,EAAC,GAAC;gBAAA;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpF,CAAC,eACTvF,OAAA;gBACEwF,SAAS,EAAC,iFAAiF;gBAC3FC,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAACpB,OAAO,CAAE;gBAAAsB,QAAA,GACrC,qBACU,EAAC3C,KAAK,CAAC0C,UAAU,GAAG,CAAC,iBAAIlF,OAAA;kBAAMwF,SAAS,EAAC,eAAe;kBAAAL,QAAA,GAAC,GAAC,EAAC3C,KAAK,CAAC0C,UAAU,EAAC,GAAC;gBAAA;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC,eACTvF,OAAA;gBACEwF,SAAS,EAAC,iFAAiF;gBAC3FC,OAAO,EAAEA,CAAA,KAAM7B,mBAAmB,CAACC,OAAO,CAAE;gBAAAsB,QAAA,GAC7C,uBACY,EAACxC,QAAQ,CAACU,MAAM,GAAG,CAAC,iBAAIrD,OAAA;kBAAMwF,SAAS,EAAC,eAAe;kBAAAL,QAAA,GAAC,GAAC,EAACxC,QAAQ,CAACU,MAAM,EAAC,GAAC;gBAAA;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC,eACTvF,OAAA;gBACEwF,SAAS,EAAC,iFAAiF;gBAC3FC,OAAO,EAAEA,CAAA,KAAM;kBACbjE,cAAc,CAACqC,OAAO,CAAC;kBACvBnC,kBAAkB,CAACc,KAAK,CAAC;gBAC3B,CAAE;gBAAA2C,QAAA,GACH,qBACU,EAACtC,OAAO,CAACQ,MAAM,GAAG,CAAC,iBAAIrD,OAAA;kBAAMwF,SAAS,EAAC,eAAe;kBAAAL,QAAA,GAAC,GAAC,EAACtC,OAAO,CAACQ,MAAM,EAAC,GAAC;gBAAA;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,EAELpE,eAAe,KAAK0C,OAAO,iBAC1B7D,OAAA;cAAKwF,SAAS,EAAC,4CAA4C;cAAAL,QAAA,EACxDxC,QAAQ,CAAC2B,GAAG,CAAC,CAACvB,GAAG,EAAE8C,CAAC;gBAAA,IAAAC,UAAA,EAAAC,aAAA;gBAAA,oBACnB/F,OAAA;kBAAawF,SAAS,EAAC,wBAAwB;kBAAAL,QAAA,gBAC7CnF,OAAA;oBACEgG,GAAG,EAAE,gDAAgDjD,GAAG,CAACkD,IAAI,EAAG;oBAChEC,GAAG,EAAEnD,GAAG,CAACkD,IAAK;oBACdT,SAAS,EAAC;kBAA6B;oBAAAJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxC,CAAC,eACFvF,OAAA;oBAAKwF,SAAS,EAAC,8BAA8B;oBAAAL,QAAA,gBAC3CnF,OAAA;sBAAKwF,SAAS,EAAC,sBAAsB;sBAAAL,QAAA,gBACnCnF,OAAA;wBAAGwF,SAAS,EAAC,eAAe;wBAAAL,QAAA,EACzBlE,OAAO,CAAC8B,GAAG,CAACC,MAAM,CAAC,IAAID,GAAG,CAACkD,IAAI,MAAAH,UAAA,GAAI/C,GAAG,CAACoD,KAAK,cAAAL,UAAA,uBAATA,UAAA,CAAWM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;sBAAA;wBAAAhB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC3D,CAAC,EACHxC,GAAG,CAACsD,OAAO,iBACVrG,OAAA;wBAAMwF,SAAS,EAAC,gEAAgE;wBAAAL,QAAA,GAAC,WACtE,EAACpC,GAAG,CAACsD,OAAO,EAAC,IACxB;sBAAA;wBAAAjB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CACP;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACE,CAAC,EACLxC,GAAG,CAACuD,KAAK,iBACRtG,OAAA;sBACEgG,GAAG,EAAEjD,GAAG,CAACuD,KAAM;sBACfJ,GAAG,EAAC,QAAQ;sBACZV,SAAS,EAAC;oBAAiD;sBAAAJ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5D,CACF,eACDvF,OAAA;sBAAGwF,SAAS,EAAC,sBAAsB;sBAAAL,QAAA,GAAC,QAAC,EAACpC,GAAG,CAACwD,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,WAAI;oBAAA;sBAAApB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC,eACxEvF,OAAA;sBAAGwF,SAAS,EAAC,gCAAgC;sBAAAL,QAAA,GAAAY,aAAA,GAAEhD,GAAG,CAAC0D,QAAQ,cAAAV,aAAA,uBAAZA,aAAA,CAAcW;oBAAW;sBAAAtB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1E,CAAC;gBAAA,GA1BEM,CAAC;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OA2BN,CAAC;cAAA,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN;UAAA,GApEO1B,OAAO;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqEZ,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELhE,WAAW,IAAIE,eAAe,iBACnCzB,OAAA;MAAKwF,SAAS,EAAC,sFAAsF;MAAAL,QAAA,eACnGnF,OAAA;QAAKwF,SAAS,EAAC,4DAA4D;QAAAL,QAAA,gBACzEnF,OAAA;UACEyF,OAAO,EAAEA,CAAA,KAAM;YACbjE,cAAc,CAAC,IAAI,CAAC;YACpBE,kBAAkB,CAAC,IAAI,CAAC;UAC1B,CAAE;UACF8D,SAAS,EAAC,iEAAiE;UAAAL,QAAA,EAC5E;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvF,OAAA;UAAIwF,SAAS,EAAC,sDAAsD;UAAAL,QAAA,EAAC;QAErE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLvF,OAAA,CAACF,SAAS;UACR6G,UAAU,EAAElF,eAAe,CAACiB,EAAG;UAC/BkE,UAAU,EAAEA,CAACC,KAAK,EAAEhD,OAAO,KAAK;YAC9B7C,aAAa,CAAE8C,IAAI,KAAM;cACvB,GAAGA,IAAI;cACP,CAACD,OAAO,GAAG,CAACgD,KAAK,EAAE,IAAI/C,IAAI,CAACD,OAAO,CAAC,IAAI,EAAE,CAAC;YAC7C,CAAC,CAAC,CAAC;YACHrC,cAAc,CAAC,IAAI,CAAC;YACpBE,kBAAkB,CAAC,IAAI,CAAC;UAC1B,CAAE;UACFiE,OAAO,EAAEA,CAAA,KAAM;YACbnE,cAAc,CAAC,IAAI,CAAC;YACpBE,kBAAkB,CAAC,IAAI,CAAC;UAC1B;QAAE;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA,eAEK,CAAC;AAEP,CAAC;AAACnF,EAAA,CApRID,YAAY;EAAA,QAECX,WAAW;AAAA;AAAAsH,EAAA,GAFxB3G,YAAY;AAsRlB,eAAeA,YAAY;AAAC,IAAA2G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}